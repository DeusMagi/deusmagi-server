/**
@var liv::hp
@sa @ref page_field_hp
*/

/**
@page page_field_hp liv::hp Uses
<table>
	<tr>
		<th>Type(s)</th>
		<th>Description</th>
	</tr>	<tr>
		<td>
@ref page_type_110
		</td><td>		The monster will use the specified &lt;long range spell&gt; when
		the player is at least 6 squares away (from the monster's head).

		Setting a &lt;long range spell&gt; is optional. If unset, the
		&lt;short range spell&gt; gets used all the time.</td>
	</tr>
	<tr>
		<td>
@ref page_type_39, @ref page_type_70, @ref page_type_104, @ref page_type_16, @ref page_type_99, @ref page_type_87, @ref page_type_113, @ref page_type_100, @ref page_type_34, @ref page_type_33, @ref page_type_15
		</td><td>			Positive &lt;health regen.&gt; bonus speeds up the player's
			healing process. Negative values slow it down.</td>
	</tr>
	<tr>
		<td>
@ref page_type_42
		</td><td>		The creator can be triggered this many times before it's disabled.</td>
	</tr>
	<tr>
		<td>
@ref page_type_158
		</td><td>			This value increases the player's healing rate. Negative
			values decrease it.</td>
	</tr>
	<tr>
		<td>
@ref page_type_66
		</td><td>		The exit destinations define the map coordinates where the exit
		leads to.</td>
	</tr>
	<tr>
		<td>
@ref page_type_6, @ref page_type_54
		</td><td>		Positive &lt;health&gt; bonus added to player's hp when food
		eaten. Negative values will reduce hp. Curse will double and
		damned will triple it, and in both cases positive values are
		negated.</td>
	</tr>
	<tr>
		<td>
@ref page_type_35
		</td><td>		This value represents the initial amount of spellpoints in the
		horn. Naturally, this is quite unimportant.</td>
	</tr>
	<tr>
		<td>
@ref page_type_3
		</td><td>		This value represents the initial amount of spellpoints in the
		rod. Naturally, this is quite unimportant.</td>
	</tr>
	<tr>
		<td>
@ref page_type_64, @ref page_type_17, @ref page_type_51
		</td><td>		Type of the object to match.</td>
	</tr>
	<tr>
		<td>
@ref page_type_28
		</td><td>		X position this magic mirror reflects objects of. -1 means it will
		use the mirror's X.</td>
	</tr>
	<tr>
		<td>
@ref page_type_80, @ref page_type_83
		</td><td>			The &lt;health points&gt; of a monster define how long it
			takes to kill it. With every successful hit from an opponent,
			health points get drained - the monster dies by zero health
			points.

			If the value '-1' is set, the monster will start out with
			full health. How much that is depends on &lt;max health&gt;.</td>
	</tr>
	<tr>
		<td>
@ref page_type_40
		</td><td>			Move creatures/monsters/NPCs.

			This feature provides you with the possibility to make NPCs
			literally "come to life". Example: The player is talking with
			an NPC, speaking a certain keyword. This triggers a magic ear
			and activates creators, creating (per default: monster-only)
			movers under the NPC's feet. The NPC starts "walking" on a
			predefined route!</td>
	</tr>
	<tr>
		<td>
@ref page_type_154
		</td><td>		The rune will detonate &lt;number of charges&gt; times before disappearing.
		If -1, the rune will detonate infinitely, or at least until it's successfully
		disarmed.</td>
	</tr>
	<tr>
		<td>
@ref page_type_98
		</td><td>		This value specifies the object we are looking for: We have a
		match if the player does/don't carry an object that is of type
		&lt;match type&gt;.</td>
	</tr>
	<tr>
		<td>
@ref page_type_41
		</td><td>		The exit destinations define the (x, y)-coordinates where the exit
		leads to.

		If both are set to zero and &lt;exit path&gt; is empty, the player will
		get teleported to another, randomly chosen teleporter on the same
		map (slightly confusing for the player though). Make sure there
		actually *is* a second one in that case.</td>
	</tr>
	<tr>
		<td>
@ref page_type_119
		</td><td>		The destinations define the (x, y)-coordinates where the mob
		should go.</td>
	</tr>
	<tr>
		<td>
@ref page_type_152
		</td><td>		Number of tiles east of the info object that the object spans.</td>
	</tr>

*/
