<?xml version="1.0" standalone="no" ?>
<!--
######################################################################
# types.xml - This is the defintitions-file for all the different    #
# Atrinik object types and their attributes.                         #
#                                                                    #
# The server code of the Atrinik game is always changing and         #
# evlolving. From time to time, object-attributes change in purpose, #
# or new ones are created.                                           #
# Therefore, it is important that an Editor is flexible and          #
# easy to "upgrade" to handle such new features. That's why the      #
# AtrinikEditor reads the type-definitions from this xml file.       #
#                                                                    #
# If you encounter bugs, typos or missing entrys in the LATEST       #
# VERSION of this file - Don't hesitate to improve it, contact us    #
# and eventually send the improved file to us: <admin@atrinik.org>.  #
# We will put it into the "official version" of the AtrinikEditor    #
# and all fellow Atrinik-Map-Makers can benefit from your work!      #
#                                                                    #
# IMPORTANT: Make a backup copy of this file before you start        #
# to modify it!                                                      #
#                                                                    #
# New types must be inserted maintaining the alphabetical order.     #
#                                                                    #
# about the 'type' elements:                                         #
#                                                                    #
# <type number="15" name="Type Name" map="no" inv="1,2"              #
#                                              allows_all_inv="yes"> #
# <import_type name="Type Name" />   import attributes of this type  #
# <required>                                                         #
#    list of required attributes to identifying this type            #
# </required>                                                        #
# <ignore>                                                           #
#    list of attributes not to import from default_type              #
# </ignore>                                                          #
# <description><![CDATA[                                             #
#   Description of this type. ]]>                                    #
# </description>                                                     #
# <use><![CDATA[                                                     #
#   How to use this type. ]]>                                        #
# </use>                                                             #
# ... attributes ...                                                 #
# </type>                                                            #
#                                                                    #
# map="yes|no" is optional and defaults to "yes". If set to "no", a  #
# validator warning is generated if this this game object is         #
# directly on the map.                                               #
#                                                                    #
# inv="type,type,...|*" is optional and defaults to "*". If this     #
# game object is in the inventory of another game object and this    #
# other game object has a type not in the list "type,type,...", a    #
# validator warning is generated.                                    #
#                                                                    #
# allows_all_inv="yes" is optional and defaults to "no". If set to   #
# "yes", this type number is implicitly added to all "inv"           #
# attributes.                                                        #
#                                                                    #
# about the 'attribute' type: <attribute ... type="XXX" >            #
#                                                                    #
# bool         - This attribute can only be set to '1' or '0'        #
# int          - This attribute contains a decimal number            #
# float        - This attr. contains a floating point number         #
# string       - This attribute contains a string                    #
# text         - This attribute contains a text ("text" can have     #
#                linebreaks, unlike "string")                        #
# fixed        - This attribute is always set to a fixed 'value'     #
#                (There is no user-input for this attribute)         #
# spell        - This attribute contains a spell. The mapmaker can   #
#                choose spells from a combo box.                     #
# nz_spell     - works just like 'spell', except that the            #
#                spell-value zero is always interpreted as <none>,   #
#                never as "magic bullet"                             #
# bool_special - Like bool, but with customized true/false values    #
# treasurelist - Atrinik treasure list (see "treasures" file)        #
# list_LISTNAME       - list, must be defined as a <list> element    #
# bitmask_BITMASKNAME - bitmask, must be defined as a <bitmask>      #
#                       element                                      #
#                                                                    #
# Created by Andreas Vogl.                                           #
######################################################################
-->
<!DOCTYPE types PUBLIC "-//Atrinik//DTD Types 1.0//EN" "types.dtd">
<types>
    <xi:include href="bitmasks.xml" />
    <xi:include href="lists.xml" />

<ignorelists>
	<!-- This ignorelist is for all system objects which are non pickable
		 and invisible. They don't interact with players at all. -->
	<ignore_list name="system_object">
		<attribute arch="value" />
		<attribute arch="nrof" />
		<attribute arch="sub_type" />
		<attribute arch="weight" />
		<attribute arch="material" />
		<attribute arch="material_real" />
		<attribute arch="no_pick" />
		<attribute arch="unpaid" />
		<attribute arch="title" />
		<attribute arch="glow_radius" />
		<attribute arch="identified" />
		<attribute arch="blocksview" />
		<attribute arch="is_invisible" />
	</ignore_list>

	<!-- This ignorelist is for non-pickable objects. They can be seen by
		 the player, but don't have values like material or weight. -->
	<ignore_list name="non_pickable">
		<attribute arch="value" />
		<attribute arch="nrof" />
		<attribute arch="weight" />
		<attribute arch="material" />
		<attribute arch="material_real" />
		<attribute arch="no_pick" />
		<attribute arch="unpaid" />
		<attribute arch="title" />
		<attribute arch="identified" />
	</ignore_list>

	<!-- This ignorelist is for all objects. -->
	<ignore_list name="default_setting">
		<attribute arch="xxxx" />
	</ignore_list>
</ignorelists>

<!-- The attributes of the default_type get added to all other types by
	 default. Every type can have an 'ignore' element however, which is
	 used to specify default attributes *not* to inherit. -->
<default_type>
	<attribute arch="name" editor="name" type="string">
		This is the name of the object, displayed to the player.
	</attribute>
	<attribute arch="title" editor="title" type="string">
		This is the object's title. Once an object is identified the
		title is attached to the name. Typical titles are "of Yordan",
		"of xray vision" etc.
	</attribute>
	<attribute arch="sub_type" editor="sub type" type="int">
		This important value is used to define "sub types" for objects of
		the same object type. Examples are weapons, which are all from
		type WEAPON but can be different sub types like slash, cleave,
		two-handed, polearms and so on. This value goes to the client
		too.

		Warning: Not all objects have a sub type and changing it without
		care can corrupt server AND/OR the clients. Normally this is not
		a subject to change outside arch definition.
	</attribute>
	<attribute arch="layer" editor="layer" type="int">
		This is the map layer the object will put in. The selected layer
		will affect where and how this object is shown on the client side.
		Layer 0 is reserved for sys_object type objects and will NEVER be
		shown on the client side. Layer 1 is for floor objects and layer 2
		for floor masks. Layer 3 and 4 are for items on the ground. Layer
		5 is for walls, layer 6 is reserved for players and layer 7 is
		for spell effects and high flying/visible objects like arrows.
	</attribute>
	<attribute arch="sub_layer" editor="sub layer" type="int">
		Extension of the layer attribute. If you have an object with "layer 2
		sub_layer 1" and an object with "layer 2", the former object will be
		rendered immediately following the latter object, thus allowing double
		floor masks, convincing bridges and the like to be created.
	</attribute>
	<attribute arch="face" editor="image" type="facename">
		The image name defines what image is displayed for this object
		in-game.
	</attribute>
	<attribute arch="animation" editor="animation" type="animname">
		The animation-name defines what animation is displayed for this
		object in-game. Note that a set animation will overrule the face.
	</attribute>
	<attribute arch="anim_speed" editor="anim speed" type="int">
		How fast to play this animation.
	</attribute>
	<attribute arch="is_animated" editor="is animated" type="bool">
		If set, the object is animated and animation is used.

		Note: Some special objects will use an animation NOT as animation
		but as frame list. Examples are buttons (which frames are changed
		by the object status of the button). IS_TURNABLE will enable
		direction turning for some object types. These flags are all
		system related. Be VERY careful when changing them.
	</attribute>
	<attribute arch="speed_left" editor="start speed" type="float">
		When an active object (with 'speed' being non-zero) is put on a
		map, this value is used as counter. Every 'tick', 'speed' (if
		negative, value is turned positive before) is added to this
		value - if it is bigger than 0 the object 'will do something' and
		this counter is decreased with -1.0.

		By default a normal object will be put on the map with start
		speed 0. It 'will do something' with the next coming 'tick'.
		Setting this value to -1.0 will put it on map but wait one full
		'lifetime' round until it does something.

		A 'fire object' should be put on map with start speed 0 - it
		should try to burn something in the moment it comes in the game.
		A bomb for example should be put with speed -1.0 on the map - it
		will stay then on map until the bomb becomes active - it
		explodes.

		The 'lifetime' round is determinated by speed. A speed of 1.0
		will give a 'lifetime' round of 1 tick - a speed of 0.01 100
		ticks.

		Special case: A negative speed value will add to start speed a
		random value between 0.0 to 0.9 . So, a speed of -0.1 with a
		start speed of -1.0 will result in speed 0.1 and start speed
		between -1.0 and -0.1. This is useful to let a row of same
		objects act in different tick ranges.
	</attribute>
	<attribute arch="nrof" editor="number" type="int">
		This value determines the number of objects in one stack (for
		example: 100 goldcoins =&gt; "number = 100"). You should set this
		at least to one, for any pickable object - otherwise it won't be
		mergeable into a stack.
	</attribute>
	<attribute arch="weight" editor="weight" type="int">
		This value defines the object's weight in gram (1000g is 1kg).
		Objects with zero weight are not pickable for players. Still, set
		the "non-pickable" flag for explicitly non-pickable objects.
	</attribute>
	<attribute arch="value" editor="value" type="int">
		Change an object's value.
	</attribute>
	<attribute arch="glow_radius" editor="glow radius" type="int">
		If &lt;glow radius&gt; is set to a value greater than zero, the
		object appears lit up on dark maps. &lt;glow radius&gt; can be a
		value between 0 and 4, the higher, the more light does the object
		emit.
	</attribute>
	<attribute arch="z" editor="height" type="int">
		Adjusts Y position of the object as it appears on the map.
	</attribute>
	<attribute arch="zoom" editor="zoom" type="int" min="-32768" max="32767">
		How much to zoom the object on the map.
	</attribute>
	<attribute arch="zoom_x" editor="horizontal zoom" type="int" min="-32768" max="32767">
		How much to horizontally zoom the object on the map.
	</attribute>
	<attribute arch="zoom_y" editor="vertical zoom" type="int" min="-32768" max="32767">
		How much to vertically zoom the object on the map.
	</attribute>
	<attribute arch="align" editor="align" type="int">
		X align of the object on the map.
	</attribute>
	<attribute arch="alpha" editor="alpha" type="int">
		Alpha value of the object.
	</attribute>
	<attribute arch="rotate" editor="rotate" type="int">
		Rotation value of the object in degrees.
	</attribute>
	<attribute arch="material_real" editor="material" type="list_material_real">
		The material defines the exact material of which the object
		consists. It is much more specific than &lt;material class&gt;,
		however only one material can be selected, not multiple.

		&lt;material&gt; is not required to be set, it can be left
		'undefined'.
	</attribute>
	<attribute arch="material" editor="material class" type="bitmask_material">
		This bitmask-value informs the player of which basic material(s)
		the object consists. Material class does also affect how likely
		the object can be destroyed by hazardous spell-effects, like
		firestorm.
	</attribute>
	<attribute arch="can_stack" editor="stackable" type="bool">
		If set, the item can be stacked. Careful, don't use on rings or
		other applyable items, it will lead to side effects.

		Missiles are designed to be used as stacks for example.
	</attribute>
	<attribute arch="no_pick" editor="non-pickable" type="bool">
		If set, the object cannot be picked up (neither by players nor
		monsters).
	</attribute>
	<attribute arch="player_only" editor="player only" type="bool">
		If set, only players can enter the tile the object with this flag
		is on.
	</attribute>
	<attribute arch="is_invisible" editor="invisible" type="bool">
		Generally makes the object invisible. Invisible objects will be
		shown if the player has "see invisible" (from an item). To hide
		objects totally from detection, use "sys_object".
	</attribute>
	<attribute arch="sys_object" editor="inv. system object" type="bool">
		Marks an object as system object. System objects are ALWAYS
		invisible and hidden from the players.

		System objects are put in layer 0.
	</attribute>
	<attribute arch="no_teleport" editor="no teleport" type="bool">
		Marks an object as no teleport object. A no teleport object can't
		be teleported by teleporter except if the object is inside the
		inventory of another object which can be teleported.
	</attribute>
	<attribute arch="blocksview" editor="block view" type="bool">
		If an item is set to block view, players (and monsters) cannot
		see beyond it unless they cross it or manage to stand on top of
		it.
	</attribute>
	<attribute arch="one_drop" editor="one drop" type="bool">
		If this flag is set for an item inside monster's quest_container
		with the quest being quest item type, the player will only be able
		to get this item once.
	</attribute>
	<attribute arch="identified" editor="identified" type="bool">
		If an item is identified, the player has full knowledge about it.
	</attribute>
	<attribute arch="reflect_spell" editor="reflect spells" type="bool">
		Object will reflect spells.
	</attribute>
	<attribute arch="reflect_missile" editor="reflect missiles" type="bool">
		Object will reflect missiles.
	</attribute>
	<attribute arch="is_magical" editor="magical" type="bool">
		If set, this object counts as "magical". Detect magic or identify
		will show this flag and the player will see a small blue M in the
		client's inventory part.
	</attribute>
	<attribute arch="cursed" editor="cursed" type="bool">
		The item is cursed. This object can't be removed when wielded or
		worn (without uncursing it). Remove curse will remove this flag.
	</attribute>
	<attribute arch="cursed_perm" editor="permanent cursed" type="bool">
		The item is permanently cursed. If this flag is set, applying or
		unapplying it will set "cursed 1" again. This flag can't be
		removed by remove curse.
	</attribute>
	<attribute arch="damned" editor="damned" type="bool">
		Stronger form of curse. Item can't be removed when wielded or
		worn. Remove damnation will remove this flag.
	</attribute>
	<attribute arch="damned_perm" editor="permanent damned" type="bool">
		The item is permanently damned. If this flag is set, applying or
		unapplying it will set "damned 1" again. This flag can't be
		removed by remove damnation.
	</attribute>
	<attribute arch="no_magic" editor="no spells" type="bool">
		If enabled, it is impossible for players to use spells on that
		spot.
	</attribute>
	<attribute arch="unpaid" editor="unpaid" type="bool">
		An &lt;unpaid&gt; item cannot be used unless the player carried
		it over a shop mat, paying the demanded price. Setting this flag
		makes sense only for items inside shops.
	</attribute>
	<attribute arch="draw_direction" editor="direction based drawing" type="bool">
		If enabled, the object will be shown depending on its direction
		and player's position. Usually used by wall decoration so the
		decoration doesn't appear from both sides of the wall.
	</attribute>
	<attribute arch="is_turnable" editor="is turnable" type="bool">
		System flag. Object can be turned into directions.
	</attribute>
	<attribute arch="direction" editor="direction" type="int">
		The object's direction.
	</attribute>
</default_type>

<type number="79" name="Misc Object">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Misc Objects are objects without special features, using the base
		setting of the game engine. This includes many decorative objects
		like statues or rocks.
	]]>
	</description>
	<attribute arch="no_pass" editor="blocking passage" type="bool">
		If set, the object cannot be passed by players nor monsters.
	</attribute>
	<attribute arch="pass_thru" editor="ethereal can pass" type="bool">
		If no_pass (blocking passage) is set, no one can pass. If this
		flag is set too, ethereal objects with the CAN_PASS_THRU flag can
		pass. This is used for example for ghosts who move through doors.
	</attribute>
	<attribute arch="can_roll" editor="moveable" type="bool">
		If set, the object is able to "roll", so it can be pushed around
		with the /push command. This setting is used for boulders and
		barrels. If you're setting this attribute, make sure to check
		"can move on" as well, in order to set relevant terrain types
		the object can be pushed to.

		Useful for puzzles and mazes.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch="speed" editor="speed" type="float">
		The object's speed.
	</attribute>
	<attribute arch="terrain_flag" editor="can move on" type="bitmask_terrain">
		What terrain can this object move on.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="78" name="Light Source" inv="">
	<ignore>
		<attribute arch="speed_left" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Light Sources are system objects which are used as a light/darkness set point.
	]]>
	</description>
</type>

<type number="74" name="Applyable Light">
	<ignore>
		<attribute arch="speed_left" />
		<attribute arch="glow_radius" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		An applyable light source for a player or monster. It has a three
		way apply chain: First time light the object, second time put it
		in the hand, third time unapply and extinguish the light.
	]]>
	</description>
	<attribute arch="last_sp" editor="glow radius" type="int">
		If &lt;glow radius&gt; is set to a value not zero, the object
		appears lit up on dark maps. The higher the value, the more light
		does the object emit. The current reasonable max value is 9.

		If the value is 0, the light can't be lit and can't be applied.
		This is used for burned out lights like torches.

		If the value is negative, this object will invoke darkness.
	</attribute>
	<attribute arch="glow_radius" editor="light on" type="int">
		Applyable light can be turned on or off. The value above will
		determinate how and then it's copied to this value. If this
		value is 0 (default) the light is off - every other value means
		on. This value is normally autoset when applied but can be set
		by map makers to simulate light on.
	</attribute>
	<attribute arch="maxhp" editor="max. ticks of light" type="int">
		&lt;Max. Ticks of Light&gt; defines the maximal value of
		&lt;Ticks of Light&gt;.

		This is normally used from refilling light sources.
	</attribute>
	<attribute arch="food" editor="ticks of light" type="int">
		&lt;Ticks of Light&gt; defines how long the object will give
		light before it wears out. Some lights can be refilled, some not.
	</attribute>
	<attribute arch="other_arch" editor="wear out change" type="string">
		If a light source wears out, it checks this value. If it set, the
		object changes to this new object. This happens with torches -
		after they wear out, they change to burned out torches which
		can't be re-lit or refilled.
	</attribute>
	<attribute arch="last_eat" editor="wear out" type="bool">
		If set this light will wear out. If not set, it is a permanent
		light and &lt;Ticks of Light&gt; counter is ignored.
	</attribute>
</type>

<type number="82" name="Light Refill Object">
	<ignore>
		<attribute arch="speed_left" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Light Refill Object is an object that can be used to refill
		applyable light object.
	]]>
	</description>
	<attribute arch="race" editor="light type" type="string">
		Defines the light type which we can refill with this refill
		object.
	</attribute>
	<attribute arch="food" editor="refill value" type="int">
		How many ticks can be refilled to a light source of the defined
		light type. If we can refill all in the light, this object is
		deleted. If we can't put all in the light, the value is decreased
		by the number we filled in.
	</attribute>
</type>

<!-- This is a special case: The "misc" type with type number 0 is the
	 fallback for all types which don't match any other defined types.
	 The required attribute "misc x" prevents that it gets confused with
	 other types like "monster & npc" which also have type number 0. -->
<type number="0" name="Misc">
	<required>
		<attribute arch="misc" value="x" />
	</required>
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		WARNING: Type 0 is an invalid type setting in Atrinik and
		will cause a warning by the server.
	]]>
	</description>
	<attribute arch="no_pass" editor="blocking passage" type="bool">
		If set, the object cannot be passed by players nor monsters.
	</attribute>
	<attribute arch="pass_thru" editor="ethereal can pass" type="bool">
		If no_pass (blocking passage) is set, no one can pass. If this
		flag is set too, ethereal objects with the CAN_PASS_THRU flag can
		pass. This is used for example for ghosts who move through doors.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="110" name="Ability" inv="83">
	<ignore>
		<attribute arch="speed_left" />
		<attribute arch="cursed" />
		<attribute arch="damned" />
		<attribute arch="is_magical" />
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Abilities are to be put in a monster's inventory. They grant
		monsters the knowledge to cast spells. Spells from abilities are
		usually magical in nature, thus adding magic to the spell damage
		they produce. If not marked as magical, the ability as natural
		effect can't be disenchanted or blocked by dispel magic.
		<br><br>
		A particularly nice feature of abilities is that they can hold
		two spells: One for short range and one for long range use.
	]]>
	</description>
	<use>
	<![CDATA[
		If you want to create "customized" spell casting monsters, you
		should use abilities (rather than spell books/wands or
		something). The long/short-range spell feature can make boss
		monsters more interesting and challenging.
		<br><br>
		You should keep in mind that magic abilities allow players to get
		better resistance. You can turn off the magic part to make the
		spells more dangerous. However, this really should not be
		necessary unless you work on very high level maps.
		<br><br>
		It is possible to create monsters that will heal other friends.
		To accomplish this, simply go to the monster's <b>Behave</b> tab,
		<b>behavior</b> select box and check <b>Find friends for friendly
		spells</b>. Then create an ability in the monster with <b>short range
		spell</b> set as minor (or greater) healing. If you want this monster
		to also heal itself when it takes damage and has a valid enemy, set
		<b>long range spell</b> to the same spell.
	]]>
	</use>
	<attribute arch="no_drop" value="1" type="fixed" />
	<attribute arch="sp" editor="short range spell" type="nz_spell">
		The monster will use the specified &lt;short range spell&gt; when
		the player is within 6-square radius (of the monster's head).
	</attribute>
	<attribute arch="hp" editor="long range spell" type="nz_spell">
		The monster will use the specified &lt;long range spell&gt; when
		the player is at least 6 squares away (from the monster's head).

		Setting a &lt;long range spell&gt; is optional. If unset, the
		&lt;short range spell&gt; gets used all the time.
	</attribute>
	<attribute arch="maxsp" editor="importance" type="int">
		Sometimes you'll want a monster to use one ability more than
		others. To achieve this, set the &lt;importance&gt; to a value
		greater than one. Abilities with this value zero/unset are
		counted to be of &lt;importance&gt; one.

		Example: A monster with "firestorm" of &lt;importance&gt; 3 and
		"magic bullet" of &lt;importance&gt; 1 will averagely cast three
		out of four times the "firestorm".
	</attribute>
	<attribute arch="last_grace" editor="casting delay" type="int">
		The casting delay this spell/ability invokes to a monster using
		it. This is cumulatively added to the monster's default casting
		delay.
	</attribute>
	<attribute arch="is_magical" editor="is magical" type="bool">
		This flag specifies whether the ability &lt;is magical&gt; in
		nature. If enabled, all spells produced by this ability will have
		magic attacktype added to the usual attacktypes.

		This should always be set for spell-like abilities. "Natural"
		abilities like a dragon's firebreath are an exception. Note that
		non-magical abilities are more dangerous because magic resistance
		does not protect from those.
	</attribute>
</type>

<type number="39" name="Amulet">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing an amulet, the object's stats will be directly inherited
		by the player. Amulets are usually meant for protection and
		defense.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="ac" editor="armour class" type="int">
		This value defines the amount of armour class bonus for wearing
		this item. &lt;Armour class&gt; lessens the chance of being hit.
		Higher values are better. It should usually be set only for
		armour-like equipment.
	</attribute>
	<attribute arch="wc" editor="weapon class" type="int">
		The &lt;weapon class&gt; value adds to the overall weapon class
		of the wielder's melee attacks. Weapon class improves the chance
		of hitting the opponent. Weapon class is the "counterpiece" of
		&lt;armour class&gt;. It should usually be set only for
		weapon-like items. Higher values are better.
	</attribute>
	<attribute arch="item_level" editor="required level" type="int">
		If &lt;required level&gt; is set to a value greater than zero,
		players cannot wear this item unless they meet this level in the
		skill category specified by &lt;level required in&gt;.

		For example: &lt;required level&gt; = 15,
		&lt;level required in&gt; = physical means the player cannot wear
		the item unless he is equal or greater than level 15 in the
		physical skill category.
	</attribute>
	<attribute arch="item_skill" editor="level required in" type="list_item_skill">
		This attribute specifies in which skill category the player must
		meet the &lt;required level&gt; in order to wear the item. It is
		meaningless when &lt;required level&gt; is zero/unset.

		For example: &lt;required level&gt; = 15,
		&lt;level required in&gt; = physical means the player cannot wear
		the item unless he is equal or greater than level 15 in the
		physical skill category.
	</attribute>
	<attribute arch="lifesave" editor="save life" type="bool">
		An item with this flag enabled will save the player's life once:
		When the player is wearing this item and his health points reach
		zero, the item disappears, replenishing player's HP and bringing
		him back to his savebed.

		An item with &lt;save life&gt; should not have any decent
		additional bonuses!
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch="applied" editor="is applied" type="bool">
		If you put this item into the inventory of a monster, and you
		want the monster to use/wear the item, you must set
		&lt;is applied&gt;.

		Enabling this flag doesn't make any sense if the item is NOT in a
		monster's inventory.
	</attribute>
	<section name="protections">
		<attribute arch="protect_impact" editor="impact protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slash" editor="slash protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cleave" editor="cleave protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_pierce" editor="pierce protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_weaponmagic" editor="w.magic protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_fire" editor="fire protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cold" editor="cold protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_electricity" editor="electricity protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_poison" editor="poison protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_acid" editor="acid protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_magic" editor="magic protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_lifesteal" editor="lifesteal protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_blind" editor="blinding protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_paralyze" editor="paralyze protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_force" editor="force protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_godpower" editor="godpower protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_chaos" editor="chaos protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_drain" editor="drain protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slow" editor="slow protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_confusion" editor="confusion protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_internal" editor="internal protect %" length="15" type="int" min="-100" max="100" />
	</section>
	<section name="stats">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
	</section>

	<section name="quality">
		<attribute arch="item_quality" editor="max. quality %" type="int" min="0" max="100">
			Every item has a natural material quality, ranging from 0 to
			100. This is a percent factor, which affects the base stats
			of the item. However, &lt;max. quality&gt; does not represent
			the actual state of the item but the best
			&lt;actual quality&gt; value this item can ever have.

			Basic quality is 80%. If the item is made of cheap material,
			the value may be lower. If made of very fine material it may
			be 100%.
		</attribute>
		<attribute arch="item_condition" editor="actual quality" type="int" min="0" max="100">
			This is the real quality status of item - showing how much it
			is used up. The quality value represents a percent value
			affecting the item's stats. Lower quality than 100% means
			effects like protection/damage etc are reduced.
		</attribute>
		<attribute arch="is_indestructible" editor="indestructible" type="bool">
			This item can't be damaged in any way (this includes special
			magic and also attacks).
		</attribute>
	</section>
	<section name="misc">
		<attribute arch="exp" editor="speed bonus" type="int">
			Divide by ten to get the player's speed bonus from wearing
			this item.
		</attribute>
		<attribute arch="hp" editor="health regen." type="int">
			Positive &lt;health regen.&gt; bonus speeds up the player's
			healing process. Negative values slow it down.
		</attribute>
		<attribute arch="maxhp" editor="health bonus" type="int">
			Positive &lt;health bonus&gt; increases the hit points.
			Negative decreases them (decrease can't reduce the total hp of
			the wearer below 1).
		</attribute>
		<attribute arch="sp" editor="mana regen." type="int">
			Positive &lt;mana regen.&gt; bonus speeds up the player's
			mana regeneration. Negative values slow it down.
		</attribute>
		<attribute arch="maxsp" editor="mana bonus" type="int">
			Positive &lt;mana bonus&gt; increases the mana points.
			Negative decreases them (decrease can't reduce the total mana
			of the wearer below 1).
		</attribute>
		<attribute arch="food" editor="food bonus" type="int">
			Positive &lt;food bonus&gt; slows down the player's
			digestion, thus he consumes less food. Negative values speed
			it up.

			Note that food is consumed not only for "being alive", but
			also for healing and mana-regeneration.

			&lt;food bonus&gt; only affects the amount of food consumed
			for "being alive". Hence, even with high &lt;food bonus&gt;,
			during a fight a player can run out of food quickly.
		</attribute>
		<attribute arch="make_invisible" editor="make invisible" type="bool">
			When applied the user gets invisible. He can't be seen by
			players or monsters unless they have "see invisible".
		</attribute>
		<attribute arch="see_invisible" editor="see invisible" type="bool">
			When applied the user can see invisible objects.
		</attribute>
		<attribute arch="make_ethereal" editor="make ethereal" type="bool">
			When applied the user gets ethereal. He can still be
			transparently seen. Grants the ability to move through walls
			and doors which have the PASS_THRU flag set (like ghosts and
			other non physical monsters).
		</attribute>
		<attribute arch="xrays" editor="gives xray vision" type="bool">
			X-ray vision allows the player to see through obstacles in a
			two-square-wide radius. This is extremely helpful and
			desirable, so don't give it away for cheap on equipment.
		</attribute>
		<attribute arch="can_see_in_dark" editor="gives infravision" type="bool">
			A player with the ability of
			&lt;infravision (see in darkness)&gt; can see better (but not
			perfectly) in darkness. Living objects will be shown in red.

			For high-level monsters, this flag is a "should-have".
		</attribute>
		<attribute arch="stealth" editor="stealth" type="bool">
			Stealth allows the player to move stealthily, thus reducing
			the visibility range of monsters nearby by twice of their
			noram visibility range.
		</attribute>
		<attribute arch="reflect_spell" editor="give reflect spells" type="bool">
			If a player is wearing any piece of equipment with the
			ability to &lt;reflect spells&gt;, all kinds of spell bullets
			and beams will bounce off him.

			This works only about 90% of all times, to avoid players
			being completely immune to certain types of attacks.

			This is a very powerful ability and it shouldn't be handed
			out cheaply!
		</attribute>
		<attribute arch="reflect_missile" editor="give reflect missiles" type="bool">
			If a player is wearing any piece of equipment with the
			ability to &lt;reflect missiles&gt;, all kinds of projectiles
			(e.g. arrows, bolts, boulders) will bounce off him.

			This works only about 90% of all times, to avoid players
			being completely immune to certain types of attacks.
		</attribute>
		<attribute arch="flying" editor="levitate" type="bool">
			As soon as the player applies a piece of equipment with
			&lt;levitate&gt; set, the player will start to float in the air.
		</attribute>
		<attribute arch="terrain_type" editor="support terrain" type="bitmask_terrain">
			The bearer of this item can move in every terrain that is set
			by &lt;support terrain&gt;. Such abilities like "water
			walking", "fire walking" etc are almost priceless as they
			open access to an entire new plane of the Atrinik world.

			Artifacts with &lt;support terrain&gt; attributes are VERY
			SPECIAL and they must be well-balanced!
		</attribute>
		<attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
			Click on the &lt;attuned paths&gt; button to select
			spellpaths. The player will get attuned to the specified
			spellpaths while wearing this item.
		</attribute>
		<attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
			Click on the &lt;repelled paths&gt; button to select
			spellpaths. The player will get attuned to the specified
			spellpaths while wearing this item.
		</attribute>
		<attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
			Click on the &lt;denied paths&gt; button to select
			spellpaths. The specified spellpaths will be denied to the
			player while wearing this item.
		</attribute>
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text describes the item's "story". Every decent artifact
		should have such a description.
	</attribute>
</type>

<type number="70" name="Ring">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Rings are worn on the hands - one ring for each each.
		Wearing rings, the object's stats will be directly inherited by
		the player, usually enhancing his spellcasting potential.
	]]>
	</description>
	<use>
	<![CDATA[
		When you create an artifact ring, never forget that players can
		wear <b>two</b> rings! Due to that it is extremely important to
		keep rings in balance with the game.
		<br><br>
		Also keep in mind that rings are generally the wizard's tools.
		They should primarily grant bonuses to spellcasting abilities
		and non-physical resistances.
	]]>
	</use>
</type>

<type number="104" name="Bracers">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Bracers are armour plates worn around the wrists.

		Wearing bracers, the object's stats will be directly inherited by
		the player, usually enhancing his defense.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;Magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the bracers.
	</attribute>
</type>

<type number="16" name="Brestplate Armour">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing an armour, the object's stats will be directly inherited
		by the player, usually enhancing his defense.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="last_heal" editor="spellpoint penalty" type="int">
		This poses a penalty to spell regeneration speed, for wearing the
		armour. The bigger the spellpoint penalty, the worse.
	</attribute>
	<attribute arch="last_sp" editor="slowdown" type="int">
		Slowdown penalty reduces the player's walking speed while wearing
		the armour. Higher values are worse - zero is the best.
	</attribute>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;Magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the armour.
	</attribute>
</type>

<type number="99" name="Boots">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing boots, the object's stats will be directly inherited by
		the player, usually enhancing his speed, or granting some minor
		protection bonus.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="last_heal" editor="spellpoint penalty" type="int">
		This poses a penalty to spell regeneration speed, for wearing the
		boots. The higher the spellpoint penalty, the worse.
	</attribute>
	<attribute arch="last_sp" editor="slowdown" type="int">
		Slowdown penalty reduces the player's walking speed when wearing
		the boots. Higher values are worse - zero is best.
	</attribute>
	<attribute arch="exp" editor="speed bonus" type="int">
		Boots with &lt;speed bonus&gt; will increase the player's walking
		speed while worn. This kind of bonus is quite desirable for
		players of low and medium level. High level players usually have
		fastest possible walking speed and thus don't need
		&lt;speed bonus&gt; anymore.

		Still, this bonus is good for nice artifacts - not everything has
		to be for highest level.
	</attribute>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;Magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the boots.

		Important: &lt;magic bonus&gt; on boots has no effect if there is
		no &lt;armour class&gt; set. It only works in combination with
		&lt;armour class&gt;.
	</attribute>
</type>

<type number="87" name="Cloak">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing a cloak, the object's stats will be directly inherited by
		the player. Cloaks usually add minor armour class and sometimes a
		bit of resistance.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;Magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the cloak.

		Important: &lt;magic bonus&gt; on cloaks has no effect if there
		is no &lt;armour class&gt; set. It only works in combination with
		&lt;armour class&gt;.
	</attribute>
</type>

<type number="113" name="Girdle">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing a girdle, the object's stats will be directly inherited
		by the player. Girdles usually provide stats or damage bonuses
		and no defense.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the girdle.

		Important: &lt;magic bonus&gt; on girdles has no effect if there
		is no &lt;armour class&gt; set. It only works in combination with
		&lt;armour class&gt;.
	</attribute>
</type>

<type number="100" name="Gloves">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing gloves, the object's stats will be directly inherited by
		the player. Gloves can add defense or damage bonuses.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="magic" editor="magic bonus" type="int">
		If the gloves provide &lt;armour class&gt;, &lt;magic bonus&gt;
		will increase it. If the gloves have &lt;weapon class&gt;
		instead, then &lt;magic bonus&gt; will increase that.
	</attribute>
</type>

<type number="9" name="Clock" inv="">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Applying a clock, the time is displayed to the player.
	]]>
	</description>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the item.
	</attribute>
</type>

<type number="151" name="Compass">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Applying a compass, the direction the player is facing is
		displayed to the player.
	]]>
	</description>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the item.
	</attribute>
</type>

<type number="34" name="Helmet">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing a helmet, the object's stats will be directly inherited
		by the player. Normal helmets usually increase defense, while
		crowns add more special bonuses like stats/resistances paired
		with low defense.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="last_heal" editor="spellpoint penalty" type="int">
		This poses a penalty to spell regeneration speed, for wearing the
		helmet. The higher the spellpoint penalty, the worse.
	</attribute>
	<attribute arch="last_sp" editor="slowdown" type="int">
		Slowdown penalty reduces the player's walking speed when wearing
		the helmet. Higher values are worse - zero is best.
	</attribute>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;Magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the helmet.

		Important: &lt;magic bonus&gt; on helmets has no effect if there
		is no &lt;armour class&gt; set. It only works in combination with
		&lt;armour class&gt;. Crowns for example typically provide no
		&lt;amour class&gt;.
	</attribute>
</type>

<type number="33" name="Shield">
	<import_type name="Amulet" />
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wearing a shield, the object's stats will be directly inherited
		by the player. Shields usually provide good defense, only
		surpassed by brestplate armour. Resistances on shields aren't
		uncommon either.
	]]>
	</description>
	<use>
	<![CDATA[
		Feel free to create your own special artifacts. However, it is
		very important that you keep your artifact in balance with
		existing maps.
	]]>
	</use>
	<attribute arch="magic" editor="magic bonus" type="int">
		&lt;magic bonus&gt; works just like ac, except that it can be
		improved by "scrolls of Enchant Armour" or reduced by acid. It is
		less useful than direct armour-class bonus on the shield.
	</attribute>
</type>

<type number="8" name="Book">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Applying a book, the containing message is displayed to the
		player.
	]]>
	</description>
	<attribute arch="level" editor="literacy level" type="int">
		If this value is set to be greater than zero, the player needs a
		certain literacy level to succeed reading the book. The book can
		be read if: mental level is greater than &lt;literacy level&gt; -
		5. Adding level to a book can be a nice idea, personally I like
		it when a player needs more than his fighting skills to solve a
		quest. However, keep the book's level at least below 15 because
		it is quite difficult to gain high mental levels.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="book content" type="text">
		This is the text that appears "written" in the book.
	</attribute>
</type>

<type number="92" name="Button" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When a predefined amount of weight is placed on a button, the
		connection value is triggered. In most cases this happens when a
		player or monster steps on it. When the button is "released", the
		connection value gets triggered a second time.
	]]>
	</description>
	<attribute arch="weight" editor="press weight" type="string">
		The button is pressed (triggered), as soon as
		&lt;press weight&gt; grams are placed on top of it.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		Every time the button is pressed or released, all objects with
		the same &lt;connection&gt; value are activated.
	</attribute>
	<attribute arch="exp" editor="reset time" type="int">
		Being activated, the button will reset after "reset time"
		ticks. After reset, the button is ready to be activated once
		again. If -1, the button will never reset and won't be possible
		to trigger again.
	</attribute>
	<attribute arch="last_eat" editor="connection flag" type="bool">
		Signals the connected objects to do a different action. See the
		help file for the object you are connecting this to for details
		what this setting will affect.
	</attribute>
	<attribute arch="path_repelled" editor="tiled maps" type="bitmask_tile_dir">
	    Tiled maps to load and look for connected objects on.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="connect_reset" editor="reset connection" type="bool">
		Will reset the connection, so it will be triggered next time something
		triggers the object, even if it was not released before. For example, if this is set:

		1.) Player A moves onto a button. The connection of the button is triggered.
		2.) Player B moves onto the same button, again the connection is triggered.
		3.) Player A moves off the button, the connection is triggered.

		Part 3 can be avoided if this option is combined with "walk off" unset.
	</attribute>
</type>

<type number="122" name="Container">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A player can put (certain kinds of) items in the container. The
		overall weight of items is reduced when put inside a container,
		depending on the settings.
		<br><br>
		A special feature of containers is the "cauldron", capable of
		mixing alchemical recipes.
	]]>
	</description>
	<use>
	<![CDATA[
		There are two types of chests:
		<ul>
			<li>First the random treasure chests - those are NOT
				containers (but object type Treasure), they create random
				treasures when applied.</li>
			<li>Second there are the permanent chests - those are
				containers, they can be opened and closed again.</li>
		</ul>
	]]>
	</use>
	<attribute arch="race" editor="container class" type="string">
		If set, the container will hold only certain types of objects.
		Possible choices for &lt;container class&gt; are: "gold and jewels",
		"arrows" and "keys".

		Unfortunately it is not easy to create new container classes,
		because items need a matching counterpiece-attribute to the
		&lt;container class&gt; before they can be put inside a
		container. This attribute ("race") is set only for the existing
		container classes.
	</attribute>
	<attribute arch="slaying" editor="key string" type="string">
		If &lt;key string&gt; is set, only players with a special key of
		matching &lt;key string&gt; are able to open the container.
	</attribute>
	<attribute arch="container" editor="maximum weight" type="int">
		The container can hold a maximum total weight of the given value
		in gram. Note that this weight limit is calculated *after* the
		weight reduction (&lt;reduce weight&gt;) has been applied.
	</attribute>
	<attribute arch="weapon_speed" editor="reduce weight %" type="float">
		This value determines how much the weight of items is reduced in
		percent, when put inside the container. &lt;reduce weight %&gt;
		1.0 means no reduction, &lt;reduce weight %&gt; 0 means items are
		weightless inside. 0.5 means weight is halved.
	</attribute>
	<attribute arch="is_cauldron" editor="alchemy cauldron" type="bool">
		If set, the container can be used as an alchemical cauldron. The
		player can put ingredients inside, close it, cast alchemy and if
		his formulae is true, he'll get what he longed for.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.

		All contents of a unique container are unique as well.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch="other_arch" editor="animation arch" type="string">
		This is used for a certain kind of... "animation" when opening
		the container. Stick to the default arches here and you won't
		get into trouble.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may contain a description of the container.
	</attribute>
</type>

<type number="42" name="Creator" inv="" allows_all_inv="yes">
	<ignore>
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When a creator is triggered, all non-event objects inside of its
		inventory are cloned and put on the same square as the creator is
		on.
	]]>
	</description>
	<attribute arch="connected" editor="connection" type="int">
		Whenever the connection value is activated, the creator gets
		triggered.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="hp" editor="number of uses" type="int">
		The creator can be triggered this many times before it's disabled.
	</attribute>
	<attribute arch="lifesave" editor="infinite uses" type="bool">
		If &lt;infinite uses&gt; is set, the creator will work
		infinitely, regardless of the value in &lt;number of uses&gt;.
	</attribute>
	<attribute arch="splitting" editor="random clone" type="bool">
		Setting this will make the creator clone a single, randomly picked,
		object from its inventory instead of all of them.
	</attribute>
	<attribute arch="one_drop" editor="check before creation" type="bool">
		Makes the creator check for already existing objects on top of it before
		creating. Avoids creating lots of duplicates if no-one picks the items up.
	</attribute>
</type>

<type number="112" name="Director" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Directors change the direction of spell objects and other
		projectiles that fly past. Unlike spinners, directors always move
		objects in the same direction. It does not make a difference from
		what angle you shoot into it.
	]]>
	</description>
	<attribute arch="connected" editor="connection" type="int">
		When triggered, the director will turn "turn value" steps.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="maxsp" editor="turn value" type="int">
		How many steps to turn when the director's connection is triggered.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
		Affect walking creatures.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
		Affect flying creatures.
	</attribute>
</type>

<type number="158" name="Disease" inv="">
	<ignore>
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Diseases are an intersting form of spellcraft in Atrinik. Once
		cast, they can spread out and infect creatures in a large area.
		Being infected can have various effects, from amusing farts to
		horrible damage - almost everything is possible.
	]]>
	</description>
	<use>
	<![CDATA[
		Diseases are extremely flexible and usable in a many ways. So far
		they are mostly used for causing bad, unwanted effects. You could
		just as well create a disease which helps the player (recharging
		mana for example).

		Infection with a "positive disease" could even be a quest reward.
	]]>
	</use>
	<attribute arch="level" editor="plague level" type="int">
		The &lt;plague level&gt; is proportional to the disease's
		deadliness. This mainly reflects in the &lt;damage&gt;. It has no
		effect on most other symptoms. Neverthless, it is a very
		important value for all damage-inflicting diseases.
	</attribute>
	<attribute arch="race" editor="infect race" type="string">
		The disease will only infect creatures of the specified
		&lt;race&gt;.

		"&lt;race&gt; *" means every creature can be infected.
	</attribute>
	<attribute arch="ac" editor="progressiveness" type="int">
		Every time the disease "moves" the severity of the symptoms are
		increased by &lt;progressiveness&gt; / 100.

		(severity = 1 + (accumulated progression) / 100)
	</attribute>
	<section name="spreading">
		<attribute arch="wc" editor="infectiousness" type="int">
			The &lt;infectiousness&gt; defines the chance of new
			creatures getting infected. If you set this too high, the
			disease is very likely to be too effective.

			&lt;infectiousness&gt; / 127 is the chance of someone in
			range catching it.
		</attribute>
		<attribute arch="last_grace" editor="attenuation" type="int">
			The &lt;attenuation&gt; value reduces the diseases'
			&lt;infectiousness&gt; everytime it infects someone new. This
			limits how many generations a disease can propagate.
		</attribute>
		<attribute arch="magic" editor="infection range" type="int">
			&lt;Infection range&gt; sets the range at which infection may
			occur. If positive, the &lt;infection range&gt; is level
			dependant - if negative, it is not.

			E.g. "&lt;infection range&gt; -6" means creatures can be
			infected in six square range, and &lt;plague level&gt;
			doesn't modify that.
		</attribute>
		<attribute arch="maxhp" editor="persistence" type="int">
			&lt;persistence&gt; defines how long the disease can persist
			outside a host. The disease can "move" &lt;persistence&gt;
			times outside a host before it vanishes. A negative value
			means the disease lasts for permanent (which is only
			recommended to use in maps without monsters).
		</attribute>
		<attribute arch="speed" editor="moving speed" type="float">
			The &lt;speed&gt; of the disease determines how fast the
			disease will "move", thus how fast the symptoms strike the
			host.
		</attribute>
	</section>
	<section name="symptoms">
		<attribute arch="dam" editor="damage" type="int">
			A disease with a positive &lt;damage&gt; value will strike
			the player for that amount of damage every time the symptoms
			occur.

			A negative &lt;damage&gt; value produces %-based damage:
			"&lt;damage&gt; -10" means the player's health is reduced by
			10% every time the symptoms strike.

			Diseases with %-based damage can be dangerous - but not
			deadly - for players of all levels.
		</attribute>
		<attribute arch="other_arch" editor="create arch" type="string">
			If set, the specified arch is created and dropped every time
			the symptoms strike.

			This can be various things: farts, body pieces, eggs...

			Even monsters can be created that way. You could also make a
			disease where some exotic stuff like money/gems is created.
		</attribute>
		<attribute arch="last_sp" editor="slowdown" type="int">
			If set, the disease imposes a &lt;slowdown&gt; penalty while
			being infected. The player's speed is reduced by
			&lt;slowdown&gt; % of normal value.
		</attribute>
		<attribute arch="exp" editor="exp. for curing" type="int">
			When the player manages to cure this disease (with a curing
			spell), he is awarded with &lt;exp. for curing&gt;
			experience.
		</attribute>
		<attribute arch="maxsp" editor="mana depletion" type="int">
			Every time the disease "moves", the player's mana is reduced
			by the value of &lt;mana depletion&gt;.

			For negative values, a %-based amount is taken.
		</attribute>
		<attribute arch="last_eat" editor="food depletion" type="int">
			Every time the disease "moves", the player's food is reduced
			by the value of &lt;food depletion&gt;.

			For negative values, a %-based amount is taken.
		</attribute>
		<attribute arch="hp" editor="health regen." type="int">
			This value increases the player's healing rate. Negative
			values decrease it.
		</attribute>
		<attribute arch="sp" editor="mana regen." type="int">
			This value increases the player's rate of mana regeneration.
			Negative values decrease it.
		</attribute>
	</section>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<section name="disability">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
		This text is displayed to the player every time the symptoms
		strike.
	</attribute>
</type>

<type number="11" name="Duplicator" inv="">
	<ignore>
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When activated, a duplicator can duplicate, multiply or destroy a pile of
		objects which lies somewhere on top of the duplicator.
		The duplicator has one arch name specified as 'target arch',
		and only objects of this archetype can be affected.
		<br><br>
		It will multiply the number of items in the pile, by the 'multiply factor'.
		If the latter is set to zero, it will destroy objects.
	]]>
	</description>
	<attribute arch="no_pick" value="1" type="fixed" />
    <attribute arch="slaying" editor="target arch" type="string">
        Only objects of matching archetype, lying on top of the duplicator
        will be duplicated, multiplied or removed. All other objects will be
        ignored.
    </attribute>
    <attribute arch="level" editor="multiply factor" type="int" min="-32768" max="32767" check_min="0" check_max="2">
        The number of items in the target pile will be multiplied by this value.
		If it is set to zero, all target objects will be destroyed.
    </attribute>
    <attribute arch="connected" editor="connection" type="int">
        An activator (lever, altar, button, etc) with matching connection
        value is able to trigger this duplicator. Be very careful that
        players cannot abuse it to create endless amounts of money or other
        valuable stuff!
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
</type>

<type number="66" name="Exit" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When the player applies an exit, he is transferred to a different
		location.

		Depending on how it is set, the player applies the exit just by
		walking into it, or by pressing apply when standing on the exit.
	]]>
	</description>
	<attribute arch="slaying" editor="exit path" type="map_path">
		The exit path defines the map that the player is transferred to.

		You can enter an absolute path, beginning with '/' (for example
		"/tutorial"). It can also be a relative path, not beginning with
		'/' (on the map "/shattered_islands/world_0303" for example I
		could use the relative path "world_0304"). Use relative paths
		whenever possible! Note that upper/lower case must always be set
		correctly. However, please use lower case only.

		If the path is not set, it is automatically assumed to be the same
		as the map the exit is on.
	</attribute>
	<attribute arch="hp" editor="destination X" type="int">
		The exit destinations define the map coordinates where the exit
		leads to.
	</attribute>
	<attribute arch="sp" editor="destination Y" type="int">
		The exit destinations define the map coordinates where the exit
		leads to.
	</attribute>
    <attribute arch="last_heal" editor="tile direction" type="list_tile_dir">
        If set to something other than "none", the exit will attempt to
        automatically calculate its destination, relative to its position
        on the current map and the specified map tile direction.

        This is used for exits such as stairs, where the destination is
        usually clear just from the tiled maps.
    </attribute>
	<attribute arch="walk_on" editor="apply by walking" type="bool">
		If set, the player will apply the exit by just walking into it.
		This must be set for the invisible exits for example. If unset,
		the player has to step onto the exit and press 'a' to get
		transferred.
	</attribute>
	<attribute arch="fly_on" editor="apply by flying" type="bool">
		If set, the player will apply the exit by "flying into it".
		Flying means the player is levitating. E.g. wearing levitation
		boots.
	</attribute>
	<attribute arch="last_eat" editor="unique destination" type="bool">
		This flag defines the destined map as "personal unique map". If
		set, there will be a seperate version of that map for every
		player out there.

		An exit pointing outside of a personal unique map must have the
		"unique destination" flag unset.
	</attribute>
	<attribute arch="dam" editor="base damage" type="int">
		How much damage is inflicted to the player using the exit.
	</attribute>
	<attribute arch="level" editor="level" type="int">
		Level at which to hit the player with 'base damage'.
	</attribute>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="exit message" type="text">
		If set, this message will be displayed to the player when he
		applies the exit. This is quite useful to throw in some
		"role-play feeling": "As you enter the dark cave you hear the
		sound of rustling dragonscales...".
	</attribute>
</type>

<type number="72" name="Flesh">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		By eating/drinking food-objects, the player can fill his stomach
		and gain a little health.
	]]>
	</description>
	<attribute arch="food" editor="foodpoints" type="int">
		The player's stomach will get filled with this amount of
		foodpoints. The player's health will increase by
		&lt;foodpoints&gt;/50 hp.
	</attribute>
	<attribute arch="level" editor="flesh level" type="int">
		The &lt;flesh level&gt; is not visible to the players and it
		affects only dragon players. Normally this value reflects the
		level of the monster from which the flesh item originates.

		Dragon players always search for flesh of highest level possible,
		because it bears the best chance to gain high resistances.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<section name="protections">
		<attribute arch="protect_impact" editor="impact protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slash" editor="slash protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cleave" editor="cleave protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_pierce" editor="pierce protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_weaponmagic" editor="w.magic protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_fire" editor="fire protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cold" editor="cold protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_electricity" editor="electricity protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_poison" editor="poison protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_acid" editor="acid protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_magic" editor="magic protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_lifesteal" editor="lifesteal protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_blind" editor="blinding protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_paralyze" editor="paralyze protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_force" editor="force protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_godpower" editor="godpower protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_chaos" editor="chaos protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_drain" editor="drain protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slow" editor="slow protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_confusion" editor="confusion protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_internal" editor="internal protect %" length="15" type="int" min="-100" max="100" />
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the item.
	</attribute>
</type>

<type number="71" name="Floor" inv="">
	<ignore>
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Floors are the base ground objects, which "define" the tile. All
		settings for ground type and moving issues are done in the floor
		tile.
		<br><br>
		For floor tiles, we have 2 rules:
		<br><br>
		a) There must be a floor tile for every coordinate of a map,
		   unless the given coordinate doesn't have any other objects.
		b) Only ONE floor tile per map position.
	]]>
	</description>
	<attribute arch="is_floor" value="1" type="fixed" />
	<attribute arch="no_pass" editor="blocking passage" type="bool">
		If set, the object cannot be passed by players nor monsters.
	</attribute>
	<attribute arch="pass_thru" editor="ethereal can pass" type="bool">
		If no_pass (blocking passage) is set, no one can pass. If this
		flag is set too, ethereal objects with the CAN_PASS_THRU flag can
		pass. This is used for example for ghosts who move through doors.
	</attribute>
	<attribute arch="last_sp" editor="luminousness" type="int">
		This value sets the basic light/darkness value of tile space.
		This is how much this space is naturally glowing. This is NOT
		the light source value. This value can be negative (shadow) and
		is directly added to a tile light value.
	</attribute>
	<attribute arch="z" editor="height" type="int">
		Height of this tile.
	</attribute>
	<section name="terrain">
		<attribute arch="terrain_type" editor="terrain type" type="bitmask_terrain">
			The &lt;terrain type&gt; defines what kind of environment
			exists on this tile. This can be anything from normal land (=
			"none") to water, fire etc. Only creatures with appropriate
			terrain abilities can pass over this square.
		</attribute>
	</section>
	<attribute arch="unique" editor="unique floor" type="bool">
		Unique floor means that any items dropped on that spot will be
		saved beyond map reset.

		Useful for maps like guild storage.
	</attribute>
	<attribute arch="xrays" editor="no push" type="bool">
		It's not possible to push objects onto this tile with the
		/push command.
	</attribute>
	<attribute arch="no_pvp" editor="no PvP" type="bool">
		This will disable PvP on the tile this floor is on. Use carefully on
		maps with PvP enabled: it should not be possible to get on this floor
		directly from the arena (escape route), but more like an area for
		spectators.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="77" name="Wall" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Walls are like floor basic objects for maps.

		Walls are special in the way that the client uses wall faces for
		some graphical tricks, like drawing double walls.
	]]>
	</description>
	<attribute arch="no_pass" editor="blocking passage" type="bool">
		If set, the object cannot be passed by players nor monsters.
	</attribute>
	<attribute arch="pass_thru" editor="ethereal can pass" type="bool">
		If no_pass (blocking passage) is set, no one can pass. If this
		flag is set too, ethereal objects with the CAN_PASS_THRU flag can
		pass. This is used for example for ghosts who move through doors.
	</attribute>
	<attribute arch="can_roll" editor="moveable" type="bool">
		If set, the object is able to "roll", so it can be pushed around
		with the /push command. This setting is used for boulders and
		barrels.
	</attribute>
	<attribute arch="draw_double" editor="draw twice" type="bool">
		If set, the wall will be drawn twice, but only if it's not in
		the bottom quadrant of the client's map.
	</attribute>
	<attribute arch="draw_double_always" editor="always draw twice" type="bool">
		If set, the wall will always be drawn twice, regardless of where
		it is on the map relative to the player.
	</attribute>
</type>

<type number="6" name="Food">
	<ignore>
		<attribute arch="cursed" />
		<attribute arch="damned" />
		<attribute arch="speed_left" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		By eating/drinking food objects, the player can fill his stomach
		and gain a little health and/or mana bonus.

		Temporary effects are stat gains/loses and resistance
		gains/loses. Cursed and damned food can increase and/or negate
		positive effects.
	]]>
	</description>
	<attribute arch="food" editor="foodpoints" type="int">
		The player's stomach will get filled with this amount of
		foodpoints. The player's health will increase by
		&lt;foodpoints&gt; / 50 hp.
	</attribute>
	<attribute arch="hp" editor="health bonus" type="int">
		Positive &lt;health&gt; bonus added to player's hp when food
		eaten. Negative values will reduce hp. Curse will double and
		damned will triple it, and in both cases positive values are
		negated.
	</attribute>
	<attribute arch="sp" editor="mana bonus" type="int">
		Positive &lt;mana&gt; bonus added to player's mana when food
		eaten. Negative values will reduce mana. Curse will double and
		damned will triple it, and in both cases positive values are
		negated.
	</attribute>
	<attribute arch="cursed" editor="cursed food" type="bool">
		Turn positive effects negative and then double all negative
		effects.
	</attribute>
	<attribute arch="damned" editor="damned food" type="bool">
		Turn positive effects negative and then triple all negative
		effects.
	</attribute>
	<attribute arch="speed_left" editor="force time" type="float">
		The &lt;speed&gt; determines how long a force will stay if it
		gets created from food effects. Only used when food has effects
		and then copied to force speed.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<section name="Force Effects">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
		<attribute arch="protect_impact" editor="impact protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slash" editor="slash protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cleave" editor="cleave protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_pierce" editor="pierce protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_weaponmagic" editor="w.magic protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_fire" editor="fire protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cold" editor="cold protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_electricity" editor="electricity protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_poison" editor="poison protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_acid" editor="acid protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_magic" editor="magic protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_lifesteal" editor="lifesteal protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_blind" editor="blinding protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_paralyze" editor="paralyze protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_force" editor="force protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_godpower" editor="godpower protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_chaos" editor="chaos protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_drain" editor="drain protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slow" editor="slow protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_confusion" editor="confusion protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_internal" editor="internal protect %" length="15" type="int" min="-100" max="100" />
	</section>
</type>

<type number="54" name="Drink">
	<import_type name="Food" />
	<ignore>
		<attribute arch="cursed" />
		<attribute arch="damned" />
		<attribute arch="speed_left" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		"Drink" objects are like food objects - just liquids instead of
		organics.
	]]>
	</description>
</type>

<type number="91" name="Gate" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Gates play an important role in Atrinik. Gates can be opened by
		activating a button/trigger, by speaking passwords (magic_ear)
		or carrying special key-objects (inventory checker).
	]]>
	</description>
	<use>
	<![CDATA[
		Use gates to divide your maps into seperated areas. After solving
		area A, the player gains access to area B, and so on. Make your
		maps more complex than "one-way".
	]]>
	</use>
	<attribute arch="connected" editor="connection" type="int">
		When triggered, the gate will start closing if it's open, and
		start opening if it's closed.
	</attribute>
	<attribute arch="maxhp" editor="time delay" type="int">
		If set and the gate is triggered, the gate will stay in the
		new condition for the specified amount of time, by which it
		will reset back to the previous state.

		A value of 10 is around 5 seconds.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
</type>

<type number="93" name="Handle" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A handle can be applied by players and (certain) monsters.
		Every time it is applied, the connection value is triggered.
	]]>
	</description>
	<attribute arch="no_pick" value="1" type="fixed" />
	<attribute arch="connected" editor="connection" type="int">
		Every time the handle is applied, all objects with the same
		&lt;connection&gt; value are activated.
	</attribute>
	<attribute arch="slaying" editor="key string" type="string">
		If &lt;key string&gt; is set, only players with a special key of
		matching &lt;key string&gt; are able to activate the handle.
	</attribute>
	<attribute arch="exp" editor="reset time" type="int">
		Being activated, the handle will reset after "reset time"
		ticks. After reset, the handle is ready to be activated once
		again. If -1, the handle will never reset and won't be possible
		to trigger again.
	</attribute>
	<attribute arch="last_eat" editor="connection flag" type="bool">
		Signals the connected objects to do a different action. See the
		help file for the object you are connecting this to for details
		what this setting will affect.
	</attribute>
	<attribute arch="path_repelled" editor="tiled maps" type="bitmask_tile_dir">
	    Tiled maps to load and look for connected objects on.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
</type>

<type number="88" name="Damager" inv="">
	<ignore>
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		This object will do damage to all enemy creatures standing on it. It is
		perfect for implementing things like lava.
		<br><br>
		Damage is taken in regular time intervals, or just when a creature
		moves over it. Remember to set an attack type accordingly.
	]]>
	</description>
	<attribute arch="name" editor="name" type="string">
		The name of the damager. This is so the player knows what is hitting them,
		and in case they die, the killer's name.

		Examples are 'lava', 'spikes', etc.
	</attribute>
	<attribute arch="dam" editor="base damage" type="int">
		The &lt;base damage&gt; defines how much damage is inflicted to
		the victim per hit. The final damage is influenced by several
		other factors like the victim's protections.
	</attribute>
	<attribute arch="speed" editor="damaging speed" type="float">
		Controls how often the damager hits creatures standing on top of it.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
		Whether to trigger the damager each time an object walks on top
		of it.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
		Whether to trigger the damager each time an object flies on top
		of it.
	</attribute>
	<attribute arch="friendly" editor="friendly" type="bool">
		If set, the damager will not attack friendly creatures (players, NPCs, etc)
		but only monsters.
	</attribute>
	<attribute arch="level" editor="level" type="int">
		Level of the damager. Affects the chance for the damager to miss
		(same chance as spells).
	</attribute>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<section name="terrain">
		<attribute arch="slow_move" editor="slow movement" type="bool">
			If set, 'slow movement penalty' will take effect. Remember to
			set "walk on" and "fly on" according to which creatures
			should be slowed down.
		</attribute>
		<attribute arch="exp" editor="slow movement penalty" type="int">
			If set to a value greater than zero, all creatures moving over this
			spot will be slower than normal.

			This is the amount of ticks that they will be frozen for.
		</attribute>
		<attribute arch="terrain_flag" editor="affect terrains" type="bitmask_terrain">
			Which terrain types the slow movement penalty will affect. If
			none, all terrains will be affected.
		</attribute>
	</section>
</type>

<type number="56" name="Holy Altar" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Holy altars are altars for the various religions. Praying at a
		Holy altar will make you a follower of that god, and if you
		already follow that god, you may get some extra bonuses.
	]]>
	</description>
	<attribute arch="other_arch" editor="god name" type="string">
		The altar belongs to the god of the given name.
	</attribute>
	<attribute arch="level" editor="reconsecrate level" type="int">
		To re-consecrate an altar, the player's divine prayers level must
		be as high or higher than this value. In that way, some altars can
		not be re-consecrated, while other altars, like those in dungeons and
		apartments could be.

		Altars located in temples should have at least
		&lt;reconsecrate level&gt; 120. Some characters might need those
		altars, they would be very unhappy to see them re-consecrated to
		another cult.
	</attribute>
	<attribute arch="xrays" editor="always switch god" type="bool">
		If not set and player with different deity prays on this altar, they
		will have 1/&lt;divine prayers level&gt; to become follower of the altar's
		deity. With this setting on, the chance effectively becomes 1/1, thus always.
	</attribute>
</type>

<type number="35" name="Horn">
	<ignore>
		<attribute arch="title" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Horns are very similar to rods. The difference is that horns
		regenerate spellpoints faster and thus are more valuable than
		rods.
		<br><br>
		A horn contains a spell. The player can use this spell by
		applying and "firing" (blowing) the horn. Unlike wands/scrolls,
		horns can be used endlessly.
	]]>
	</description>
	<use>
	<![CDATA[
		Horns are powerful due to their fast recharge rate. They should
		never contain high level attacking spells. Even curing/healing
		spells are almost too good on a horn.
	]]>
	</use>
	<attribute arch="sp" editor="spell" type="nz_spell">
		Sets the &lt;spell&gt; of the horn. Consider twice before handing
		out any horns to players, since they can be used endlessly
		without any mana cost!
	</attribute>
	<attribute arch="level" editor="casting level" type="int" min="0" max="115">
		The casting level of the &lt;spell&gt; determines its power. For
		attack spells, level should not be set too high.
	</attribute>
	<attribute arch="last_grace" editor="use speed" type="int">
		When fired/used, this value in ticks defines how long it needs
		before the player can fire it again. The value is in ticks.
		8 ticks are a second.
	</attribute>
	<attribute arch="hp" editor="initial spellpoints" type="int">
		This value represents the initial amount of spellpoints in the
		horn. Naturally, this is quite unimportant.
	</attribute>
	<attribute arch="maxhp" editor="max. spellpoints" type="int">
		When the horn is fully charged up, it will hold this maximum
		amount of spellpoints. Make sure it is enough to cast the
		contained spell at least once. But don't set the value too high,
		as that might make the horn way too effective.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may contain a description of the horn.
	</attribute>
</type>

<type number="3" name="Rod">
	<ignore>
		<attribute arch="title" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A rod contains a spell. The player can use this spell by applying
		and firing the rod. Rods need time to regenerate their "internal"
		spellpoints, lowering the effectiveness in combat. But unlike
		wands/scrolls, rods can be used endlessly. ]]>
	</description>
	<use>
	<![CDATA[
		Rods with healing/curing spells are extremely powerful. Usually,
		potions have to be used for that purpose. Though, potions are
		expensive and only good for one-time-use.
	]]>
	</use>
	<attribute arch="sp" editor="spell" type="nz_spell">
		Sets the &lt;spell&gt; of the rod. Consider twice before handing
		out special rods to players, since they can be used endlessly
		without any mana cost! Rods with heal/restoration/protection
		spells, IF available, MUST be very very VERY difficult to get!
	</attribute>
	<attribute arch="last_grace" editor="use speed" type="int">
		When fired/used, this value in ticks defines how long it needs
		before the player can fire it again. The value is in ticks.
		8 ticks are a second.
	</attribute>
	<attribute arch="level" editor="casting level" type="int">
		The casting level of the &lt;spell&gt; determines it's power.
		For attack spells, level should be set to something reasonable.
	</attribute>
	<attribute arch="hp" editor="initial spellpoints" type="int">
		This value represents the initial amount of spellpoints in the
		rod. Naturally, this is quite unimportant.
	</attribute>
	<attribute arch="maxhp" editor="max. spellpoints" type="int">
		When the rod is fully charged up, it will hold this maximum
		amount of spellpoints. Make sure it is enough to cast the
		contained spell at least once. But don't set the value too high,
		as that might make the rod too effective.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may contain a description of the rod.
	</attribute>
</type>

<type number="73" name="Inorganic">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Inorganic materials are generally used as ingredients for
		alchemical recipes. By themselves, they have no special
		functionalities.
	]]>
	</description>
	<attribute arch="is_dust" editor="is dust" type="bool" />
	<section name="protections">
		<attribute arch="protect_impact" editor="impact protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slash" editor="slash protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cleave" editor="cleave protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_pierce" editor="pierce protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_weaponmagic" editor="w.magic protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_fire" editor="fire protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cold" editor="cold protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_electricity" editor="electricity protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_poison" editor="poison protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_acid" editor="acid protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_magic" editor="magic protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_lifesteal" editor="lifesteal protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_blind" editor="blinding protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_paralyze" editor="paralyze protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_force" editor="force protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_godpower" editor="godpower protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_chaos" editor="chaos protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_drain" editor="drain protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slow" editor="slow protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_confusion" editor="confusion protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_internal" editor="internal protect %" length="15" type="int" min="-100" max="100" />
	</section>
</type>

<type number="64" name="Inventory Checker" inv="">
	<ignore>
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Inventory checkers passively check the players inventory for a
		specific object. You can set a connected value that is triggered
		either if that object is present or missing ("last_sp") when a
		player walks over the inventory checker. A valid option is to
		remove the matching object (usually not recommended, see
		"last_heal").
		<br><br>
		Alternatively, you can set your inventory checker to block all
		players that do/don't carry the matching object ("no_pass").
		<br><br>
		As you can see, inventory checkers are quite powerful, holding a
		great variety of possibilities.
	]]>
	</description>
	<use>
	<![CDATA[
		Putting a check inventory space in front of a gate (one below)
		and one on the opposite side works reasonably well as a control
		mechanism. Unlike the key/door-combo, this one works infinitively
		since it is independant from map reset. Use it to put a
		"structure" into your maps: Player must solve area A to gain
		access to area B. This concept can be found in nearly every RPG -
		simple but effective.
	]]>
	</use>
	<attribute arch="connected" editor="connection" type="int">
		Whenever the inventory checker is triggered, all connected
		objects get triggered. This only makes sense together with
		"blocking passage" disabled.
	</attribute>
	<attribute arch="last_eat" editor="connection flag" type="bool">
		Signals the connected object(s) to do a different action.
	</attribute>
	<attribute arch="path_repelled" editor="tiled maps" type="bitmask_tile_dir">
	    Tiled maps to load and look for connected objects on.
	</attribute>
	<attribute arch="slaying" editor="match key string" type="string">
		This string specifies the object we are looking for: We have a
		match if the player does/don't carry a key object or a mark with
		identical &lt;key string&gt;. This string is compared to the name
		of an object. If the "match = slaying field" is set, the text is
		compared to the slaying field of the object we search for.
	</attribute>
	<attribute arch="sp" editor="match = slaying field" type="bool">
		Enabled means key text is compared to the slaying field of an
		object and not the name.
	</attribute>
	<attribute arch="race" editor="match arch name" type="string">
		Arch name of the object to match.
	</attribute>
	<attribute arch="hp" editor="match type" type="int">
		Type of the object to match.
	</attribute>
	<attribute arch="last_sp" editor="match = having" type="bool">
		Enabled means having that object is a match. Disabled means not
		having that object is a match.
	</attribute>
	<attribute arch="last_grace" editor="blocking passage" type="bool">
		If set, only players meeting the match criteria can pass through
		the square the inventory checker is on. If unset (default), the
		inventory checker acts like a pedestal/detector.
	</attribute>
	<attribute arch="last_heal" editor="remove match" type="bool">
		If set, the matching object will be removed.
	</attribute>
	<attribute arch="xrays" editor="affect players only" type="bool">
		If enabled, only players will be affected by the "blocking passage"
		setting, while any other object will be able to pass through (as
		long as it can move).
	</attribute>
</type>

<type number="60" name="Gems">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Items of the type Gems are handled like a currency. Unlike for
		any other type of item, in shops, the buying and selling prices
		differ only marginally.
	]]>
	</description>
	<attribute arch="race" value="gold and jewels" type="fixed" />
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="116" name="Jewels">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Items of the type Jewels are handled like a currency. Unlike for
		any other type of item, in shops, the buying and selling prices
		differ only marginally.
	]]>
	</description>
	<attribute arch="race" value="gold and jewels" type="fixed" />
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="117" name="Nuggets">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Items of the type Nuggets are handled like a currency. Unlike for
		any other type of item, in shops, the buying and selling prices
		differ only marginally.
	]]>
	</description>
	<attribute arch="race" value="gold and jewels" type="fixed" />
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the object.
	</attribute>
</type>

<type number="20" name="Door" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A locked door can be opened only when carrying the appropriate
		special key.
	]]>
	</description>
	<use>
	<![CDATA[
		If you want to create a locked door that cannot be opened (no
		key), set a key string to something like "no_key_available". This
		will clarify things and only a fool would create a key matching
		that string.
	]]>
	</use>
	<attribute arch="pass_thru" editor="ethereal can pass" type="bool">
		If no_pass (blocking passage) is set, no one can pass. If this
		flag is set too, ethereal objects with the CAN_PASS_THRU flag can
		pass. This is used for example for ghosts who move through doors.
	</attribute>
	<attribute arch="slaying" editor="key string" type="string">
		The &lt;key string&gt; in the door must be identical with the
		&lt;key string&gt; in the special key, then the door is unlocked.
		It is VERY important to set the &lt;key string&gt; to something that
		is unique among the Atrinik maps.
	</attribute>
	<attribute arch="sp" editor="open counter" type="int">
		An opened door will auto-close after some time. The higher this
		value the longer the door will stay open.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="lock message" type="text">
		When a player is trying to open the door without carrying the
		appropriate key, this text is displayed to the player. This is
		a good opportunity to place hints about the special key needed
		to unlock the door.
	</attribute>
</type>

<type number="28" name="Magic Mirror" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Magic mirror are objects that can "reflect" what is happening on
		another map. They can be used to create towers, from which if you
		look outside you'll see the terrain and other players (but you won't
		be able to target them or say things to them, as they won't hear you).
	]]>
	</description>
	<attribute arch="slaying" editor="map" type="map_path">
		The map path the magic mirror is pointing to. Can be either absolute
		or relative map path.

		If not set, the current map path is used.
	</attribute>
	<attribute arch="hp" editor="X position" type="int">
		X position this magic mirror reflects objects of. -1 means it will
		use the mirror's X.
	</attribute>
	<attribute arch="sp" editor="Y position" type="int">
		Y position this magic mirror reflects objects of. -1 means it will
		use the mirror's Y.
	</attribute>
	<attribute arch="last_eat" editor="height adjust" type="int">
		How much to adjust height of objects using height on the mirrored tile
		by.
	</attribute>
	<attribute arch="maxhp" editor="X adjust" type="int">
		Value to adjust X position of the tile being mirrored. Useful if the
		"X position" is set to -1.
	</attribute>
	<attribute arch="maxsp" editor="Y adjust" type="int">
		Value to adjust Y position of the tile being mirrored. Useful if the
		"Y position" is set to -1.
	</attribute>
	<attribute arch="last_heal" editor="zoom" type="int">
		How much to zoom the mirrored objects.
	</attribute>
	<attribute arch="path_attuned" editor="layers" type="bitmask_mirror_layer_zoom">
		Layers to zoom.
	</attribute>
	<attribute arch="align" editor="align" type="int">
		X align of the mirrored objects on the map.
	</attribute>
</type>

<type number="62" name="Magic Wall" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Magic walls fire spells in a given direction, in regular
		intervals.
		<br><br>
		Magic walls can contain any spell. However, some spells do not
		operate very successfully in them. The only way to know is to
		test the spell you want to use with a wall.
	]]>
	</description>
	<attribute arch="dam" editor="spell" type="nz_spell">
		The magic wall will cast this spell.
	</attribute>
	<attribute arch="level" editor="spell level" type="int" min="0" max="115">
		The wall will cast its spell at this level.
	</attribute>
	<attribute arch="speed" editor="casting speed" type="float">
		Defines the spellcasting speed of the wall. You can fine-tune how
		long the duration between two casts shall be.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		Connection ID for the magic wall.
	</attribute>
	<attribute arch="last_eat" editor="casting on/off" type="bool">
		If set, the wall is on and casts spells in regular intervals.
		This setting can be toggled by a connected object with
		"connection flag" set.
	</attribute>
	<attribute arch="maxsp" editor="turn steps" type="int">
		If set and the magic wall is triggered by an object without
		"connection signal" set, the magic wall will turn this many steps.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
</type>

<type number="55" name="Marker" inv="">
	<ignore>
		<ignore_list name="system_object" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A marker is an object that inserts an invisible force (a mark)
		into a player stepping on it. This force does nothing except
		contain a "key string"; which can be discovered by inventory
		checkers. It is also possible to use markers for removing marks
		again.
		<br><br>
		Note that the player has no possibility to "see" his own marks,
		except by the effect that they cause on the maps.
	]]>
	</description>
	<attribute arch="race" editor="key string" type="string">
		The key string to insert into the passing player. If a marker
		with the same key string already exists, a new one won't be
		inserted.
	</attribute>
	<attribute arch="food" editor="mark duration" type="int">
		How long the mark will remain on the player. If zero, the mark
		will never vanish automatically. A value of 1 is about 10
		seconds.
	</attribute>
	<attribute arch="slaying" editor="delete mark" type="string">
		If set, the marker with this key string will be removed when the
		player passes over the marker.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
		Whether to mark creatures walking onto the marker.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
		Whether to mark creatures flying onto the marker.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="marking message" type="text">
		In the moment when the player gets marked, this text is displayed
		to him.
	</attribute>
</type>

<type number="36" name="Money">
	<ignore>
		<attribute arch="unpaid" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Items of the type Money are handled as currency. Money cannot be
		sold/bought in shops. When money is dropped in a shop, it stays
		the same.
		<br>
		When a player picks an item from a shop and attempts to walk over
		the shop mat, the item's selling-price is automatically
		subtracted from the player's money.
		<br><br>
		For money, always use the default arches. Don't modify them.
	]]>
	</description>
	<attribute arch="race" value="gold and jewels" type="fixed" />
</type>

<type number="80" name="Monster &amp; NPC" inv="" map="no">
	<ignore>
		<attribute arch="material" />
		<attribute arch="material_real" />
		<attribute arch="nrof" />
		<attribute arch="value" />
		<attribute arch="unpaid" />
		<attribute arch="identified" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Monsters can behave in various kinds of ways. They can be
		aggressive, attacking the player. Or peaceful, helping the player
		- maybe joining him as pet.

		The unagressive creatures who communicate with players are
		usually called "NPCs" (Non Player Characters), a well-known term
		in role-playing environments.
	]]>
	</description>
	<attribute arch="randomitems" editor="treasurelist" type="treasurelist">
		When the monster is killed, items from the treasurelist will drop
		to the ground. This is a common way to reward players for killing
		(masses of) monsters.

		Note that you can always put items into the monster's inventory.
		Those will drop-at-kill just like the stuff from the
		&lt;treasurelist&gt;.
	</attribute>
	<attribute arch="level" editor="level" type="int">
		A monster's &lt;level&gt; is the most important attribute.
		&lt;level&gt; affects the power of a monster in various ways,
		and also how much experience the player gains for killing the
		monster.
	</attribute>
	<attribute arch="item_condition" editor="relative level" type="list_relative_level">
		Level of the monster relative to map difficulty.
	</attribute>
	<attribute arch="race" editor="race" type="string">
		Every monster should have a race set to categorize it. The
		monster's &lt;race&gt; can have different effects: Slaying
		weapons inflict triple damage against enemy races and holy word
		kills only enemy races of the god.
	</attribute>
	<attribute arch="exp" editor="experience" type="int">
		When a player kills this monster, he will get this amount of
		&lt;experience&gt;, with various adjustments, like what level the
		monster was. The experience will flow into the skill category the
		player used for the kill.
	</attribute>
	<attribute arch="speed" editor="speed" type="float">
		The &lt;speed&gt; determines how fast a monster will both move
		and fight. High &lt;speed&gt; makes a monster considerably
		stronger. If the start value is negative (like -0.1) then the
		speed is set to 0.1 but the speed counter becomes a random start
		value.
	</attribute>
	<attribute arch="other_arch" editor="breed monster" type="string">
		This only takes effect if &lt;multiply&gt; or &lt;splits&gt; is
		enabled. The monster will create a &lt;breed monster&gt; every
		once in a while. &lt;breed monster&gt; can be set to any valid
		arch-name of a monster.
	</attribute>
	<attribute arch="generator" editor="multiply" type="bool">
		Monsters with &lt;multiply&gt; enabled will create a
		&lt;breed monster&gt; every once in a while. If enabled, you must
		also set &lt;breed monster&gt;.
	</attribute>
	<attribute arch="splitting" editor="split" type="bool">
		Monsters with &lt;split&gt; enabled will split into one or more
		&lt;breed monster&gt; whenever they're hit. The number of new
		monsters is controlled by &lt;split number&gt;. If enabled, you
		must also set &lt;breed monster&gt; and &lt;split number&gt;.
	</attribute>
	<attribute arch="food" editor="split number" type="int">
		This is the number of new monsters generated when this monster is
		split. This only takes effect if &lt;split&gt; and
		&lt;breed monster&gt; are set.
	</attribute>
	<attribute arch="invulnerable" editor="invulnerable" type="bool">
		This mob will never take any damage - so it can't die by damage.
	</attribute>
	<attribute arch="no_attack" editor="never attack" type="bool">
		This mob will never attack or fight back.
	</attribute>
	<attribute arch="flying" editor="flying" type="bool">
		Flying monsters won't get slowed down in rough terrain and they
		won't be affected by movers.
	</attribute>
	<attribute arch="undead" editor="undead" type="bool">
		Several spells only affect undead monsters: turn undead, banish
		undead, holy word, etc.
	</attribute>
	<attribute arch="corpse" editor="corpse" type="bool">
		This monster will leave a corpse behind when it dies.
	</attribute>
	<attribute arch="carrying" editor="carries weight" type="int">
		If a monster has something in the inventory, this value can be
		set to reflect the slowdown due to the carried weight.
	</attribute>
	<attribute arch="is_male" editor="male" type="bool">
		This monster is male.

		If neither male nor female is set, the monster is neuter.

		If both male and female are set, the monster is hermaphrodite.
	</attribute>
	<attribute arch="is_female" editor="female" type="bool">
		This monster is female.

		If neither male nor female is set, the monster is neuter.

		If both male and female are set, the monster is hermaphrodite.
	</attribute>
	<attribute arch="faction" editor="faction" type="string">
		Faction the monster is member of. Cannot contain spaces.
	</attribute>
	<attribute arch="faction_rep" editor="faction friendship" type="int">
		Determine faction-based friendship.

		If negative and player's faction reputation is below or equal to
		the value, the monster will be an enemy of the player.

		If positive and the player's faction reputation is above or equal
		to the value, the monster will be a friend of the player.

		If neither, the default friendship flag will be used.
	</attribute>
	<attribute arch="faction_kill_penalty" editor="faction kill penalty" type="int">
		Value to subtract from player's faction reputation if the player
		kills this monster/NPC.
	</attribute>
	<attribute arch="is_good" editor="alignment: good" type="bool">
		The monster is good aligned.
	</attribute>
	<attribute arch="is_evil" editor="alignment: evil" type="bool">
		The monster is evil aligned.
	</attribute>
	<attribute arch="is_neutral" editor="alignment: neutral" type="bool">
		The monster is neutrally aligned.
	</attribute>
	<section name="melee">
		<attribute arch="dam" editor="damage" type="int">
			A value of 50 will be handled as 5.0, a value of 55 =
			5.5. Amongst other parameters, &lt;damage&gt; affects how
			much melee damage a monster inflicts. &lt;damage&gt; is used
			as base value for damage per hit. &lt;level&gt;,
			&lt;speed&gt;, &lt;weapon class&gt; and resistances also take
			effect on the melee damage of a monster.
		</attribute>
		<attribute arch="wc" editor="weapon class" type="int">
			Monsters of high &lt;weapon class&gt; are more likely to
			really hit their opponent. &lt;weapon class&gt; can be
			considered the "counterpiece" to &lt;armour class&gt;.

			Note that the monster's level further improves weapon class:
			"real weapon class" = &lt;weapon class&gt; + &lt;level&gt;
		</attribute>
		<attribute arch="wc_range" editor="wc hit range" type="int">
			This value is set to 20 from the server when if 0. This is
			for the weapon class of ranged attacks, like arrows. The
			server will add a random value between 0 ad wc_range to the
			wc.

			If that is higher than the target's ac, the target is hit.
			The higher wc_range is 20, the more dangerous and more often
			a mob will hit.

			Because the mobile level is added to wc too, a wc_range of 40
			will let the monster hit VERY often even against the best
			armours.
		</attribute>
		<attribute arch="hp" editor="health points" type="int">
			The &lt;health points&gt; of a monster define how long it
			takes to kill it. With every successful hit from an opponent,
			health points get drained - the monster dies by zero health
			points.

			If the value '-1' is set, the monster will start out with
			full health. How much that is depends on &lt;max health&gt;.
		</attribute>
		<attribute arch="maxhp" editor="max health" type="int">
			&lt;max health&gt; is the maximum amount of
			&lt;health points&gt; this monster can have.
		</attribute>
		<attribute arch="ac" editor="armour class" type="int">
			Monsters of high &lt;armour class&gt; are less likely to get
			hit from their opponent. &lt;armour class&gt; can be
			considered the "counterpiece" to &lt;weapon class&gt;.

			Values typically range between +20 (quite good) to -20 (very
			bad).

			Note that the monster's level further improves armour class:
			"real armour class" = &lt;armour class&gt; + &lt;level&gt;
		</attribute>
		<attribute arch="con" editor="healing rate" type="int">
			Monster regenerates this many hit points each move. Each time
			the monster has a move, it gets &lt;healing rate&gt; health
			points back. Hence, &lt;movement speed&gt; has great effect
			on the monster's healing rate as well.
		</attribute>
		<attribute arch="hitback" editor="hitback" type="bool">
			Monsters with &lt;hitback&gt; enabled hurt the attacker in
			proportion to the amount of damage the *attacker* inflicted.
			This damage is additional to the regular melee damage of the
			monster.
		</attribute>
		<attribute arch="one_hit" editor="one hit only" type="bool">
			Monsters with &lt;one hit only&gt; dissapear after one
			successful hit to a player.
		</attribute>
	</section>

	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>

	<section name="spellcraft">
		<attribute arch="can_cast_spell" editor="can cast spell" type="bool">
			If &lt;can cast spell&gt; is disabled, the monster cannot
			cast any spell. Only wands/rods/etc can be used, given the
			appropriate abilities.
		</attribute>
		<attribute arch="sp" editor="spellpoints" type="int">
			Like players, monsters need &lt;spellpoints&gt; to do magic.
			Monsters use them for both spells and prayers. However, this
			value defines only the amount of *initial* spellpoints the
			monster starts with.

			When creating a spellcasting monster, remember that
			&lt;max spellpoints&gt; and &lt;spellpoint regen.&gt; are
			more important.

			If &lt;spelloints&gt; are set to '-1', the monster will start
			out with maxed spellpoints.
		</attribute>
		<attribute arch="maxsp" editor="max spellpoints" type="int">
			&lt;max spellpoints&gt; is the maximum number of spellpoints
			a monster can hold. Setting this to high values has little
			effect unless the monster has a decent
			&lt;spellpoint regen.&gt;, or the spell "regenerate mana" at it's disposal.
		</attribute>
		<attribute arch="pow" editor="spellpoint regen." type="int">
			Monsters regenerate this many spellpoints each move. Each
			time the monster has a move, it gets
			&lt;spellpoint regen.&gt; spellpoints back. Hence,
			&lt;movement speed&gt; has great effect on the monster's
			spellpoint regeneration as well.

			To make a really tough spellcasting monster, the rate of
			spellpoint regeneration is most important.
		</attribute>
		<attribute arch="magic" editor="casting delay" type="int">
			The casting delay this monster invokes every cast. This is
			cumulatively added to the spell's default casting delay.
		</attribute>
		<attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
			Click on the &lt;attuned paths&gt; button to select
			spellpaths. The creature will get attuned to the specified
			spellpaths.
		</attribute>
		<attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
			Click on the &lt;repelled paths&gt; button to select
			spellpaths. The creature will get repelled to the specified
			spellpaths.
		</attribute>
		<attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
			Click on the &lt;denied paths&gt; button to select
			spellpaths. The creature won't be able to cast spells of the
			specified paths.
		</attribute>
	</section>

	<section name="ability">
		<attribute arch="terrain_flag" editor="can move on" type="bitmask_terrain">
			These settings define on which kind of terrain this creature
			can move. If nothing is set, the creature can walk on land
			surface.
		</attribute>
		<attribute arch="dex" editor="use ability 1/" type="int">
			The &lt;use ability&gt; value is a 1/x chance that the
			monster *tries* to use per active tick a special ability like
			spellcasting, throwing, etc.
		</attribute>
		<attribute arch="can_pass_thru" editor="pass blocked tiles" type="bool">
			If no_pass (blocking passage) is set for an object, no one can
			pass the tile it is on (true for walls or closed doors). But
			if this flag is set, the monster can pass through all no_pass
			objects which have pass_thru set.

			This is used for example for ghosts who move through doors.
		</attribute>
		<attribute arch="see_invisible" editor="see invisible" type="bool">
			A monster with the ability to &lt;see invisible&gt; cannot be
			fooled with by invisible or hiding players. This flag is a
			must-have for high-level monsters. When a monster is unable
			to detect invisible players, it can be killed without
			fighting back.
		</attribute>
		<attribute arch="can_see_in_dark" editor="see in darkness" type="bool">
			A monster with the ability to &lt;see in darkness&gt; cannot
			be fooled by spells of darkness or dark maps. This flag is a
			"should-have" for high-level monsters. When a monster is
			unable to see in darkness, players can cast darkness and
			sneak around it safely.
		</attribute>
		<attribute arch="can_use_weapon" editor="can use weapons" type="bool">
			The monster will look for an usable weapon in its inventory,
			to improve its damage.
		</attribute>
		<attribute arch="can_use_bow" editor="can use bows" type="bool">
			The monster will look for an usable bow in its inventory, in
			order to fire arrows/bolts/stones/etc.
		</attribute>
		<attribute arch="can_use_armour" editor="can use armour" type="bool">
			The monster will look for an armour to use.
		</attribute>
	</section>

	<section name="behave">
		<attribute arch="unaggressive" editor="unaggressive" type="bool">
			&lt;unaggressive&gt; monsters do not attack players unless
			attacked first.
		</attribute>
		<attribute arch="friendly" editor="friendly" type="bool">
			&lt;friendly&gt; monsters help the player, attacking any non-
			friendly monsters in range.
		</attribute>
		<attribute arch="random_move" editor="random movement" type="bool">
			Monsters with this flag enabled move around at random.
		</attribute>
		<attribute arch="item_race" editor="random move range X" type="int">
			If random_move is set, this determines value of X position
			the creatures can move away from the spawn point (if it has
			one).
		</attribute>
		<attribute arch="item_level" editor="random move range Y" type="int">
			If random_move is set, this determines value of Y position
			the creatures can move away from the spawn point (if it has
			one).
		</attribute>
		<attribute arch="stand_still" editor="stand still" type="bool">
			Monsters which &lt;stand still&gt; won't move to leave their
			position. When agressive, they will attack all enemies who
			get close to them. This behaviour is commonly known from
			castle guards.

			When lining up &lt;stand still&gt;-monster in order to
			"defend" something: Be aware that such monsters are rather
			easy to kill. It's good for low level maps, but not much
			more.
		</attribute>
		<attribute arch="sleep" editor="asleep" type="bool">
			Being &lt;asleep&gt;, a monster won't move unless a player
			enters the &lt;sensing range&gt; of the monster. Usually the
			sensing range is larger than the players line of sight.
		</attribute>
		<attribute arch="behavior" editor="behavior" type="bitmask_behavior">
			This entry defines what kind of actions/behavior the monster
			is capable of.
		</attribute>
		<attribute arch="pick_up" editor="pick up" type="bitmask_pick_up">
			Click on the &lt;pick up&gt; button and select which types of
			objects the creature should try to pick up.

			Note also that if &lt;can use armor&gt;,
			&lt;can use weapon&gt;, &lt;can use ring&gt; etc etc are set,
			then the creature will pick up the matching items even if
			this is not set here.
		</attribute>
		<attribute arch="item_power" editor="sensing range" type="int">
			&lt;sensing range&gt; determines how close a player needs to
			be before the creature notices him. This is done as a square,
			for reasons of speed. If the player has stealth, the size of
			this square is reduced in half plus 1.
		</attribute>
		<attribute arch="movement_type" editor="movement type" type="list_move_type">
			Pet movement: The monster does pet movement.
			Small circle: Will move in a circle until it is attacked.
			Large circle: Same as small circle, but a larger circle is
			used.
			Short horizontal pace: Will pace back and forth until
			attacked.
			Long horizontal pace: Like short one, but the length of the
			horizontal pace area is longer.
			Random direction: Will go in a random direction.
			Random walk: Constantly move in a different random direction.
			Short vertical pace: Like short horizontal pace, but vertical
			instead.
			Long vertical pace: Like short one, but the length of the
			vertical pace area is longer.
			Use waypoints: The monster uses waypoints, if it has any.
		</attribute>
		<attribute arch="attack_move_type" editor="attack movement type" type="list_attack_type">
			Distance attack: Move toward a player if far, but mantain
			some space.
			Run away: Run but attack if player catches up to object.
			Hit and run: Run to then hit player then run away cyclicly.
			Wait and hit: Wait for player to approach then hit, move if
			hit.
			Rush: Rush toward player blindly, similiar to dumb monster.
			Always run: Always run never attack.
			Wait and hit from distance: Attack from a distance if hit.
			Keep distance: Do not try to move towards player if far.
		</attribute>
		<attribute arch="run_away" editor="run at % health" type="int" min="0" max="100">
			This is a percentage based value in the range 0-100. The
			creature will attempt to run from the attacker when it's
			health points drops below this percentage of max health.
		</attribute>
	</section>
	<section name="protections">
		<attribute arch="protect_impact" editor="impact protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slash" editor="slash protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cleave" editor="cleave protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_pierce" editor="pierce protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_weaponmagic" editor="w.magic protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_fire" editor="fire protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_cold" editor="cold protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_electricity" editor="electricity protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_poison" editor="poison protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_acid" editor="acid protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_magic" editor="magic protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_lifesteal" editor="lifesteal protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_blind" editor="blinding protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_paralyze" editor="paralyze protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_force" editor="force protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_godpower" editor="godpower protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_chaos" editor="chaos protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_drain" editor="drain protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_slow" editor="slow protect %" length="15" type="int" min="-100" max="100" />
		<attribute arch="protect_confusion" editor="confusion protect %" length="15" type="int" min="-100" max="100" />

		<attribute arch="protect_internal" editor="internal protect %" length="15" type="int" min="-100" max="100" />
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="NPC message" type="text">
		This textfield contains the keyword-matching-syntax. The text
		should have the following format:

		"@match &lt;keyword1&gt;|&lt;keyword2&gt;|... ".

		Any number of keywords from one to infinite is allowed. Make sure
		they are seperated by a '|'.

		Examples: "@match yes", "@match gold|treasure". The connected
		value will be triggerd when the player speaks any of the given
		keywords within a two-square radius.

		IMPORTANT: Upper/lower case does not make a difference.
	</attribute>
</type>

<type number="81" name="Spawn Point" inv="">
	<ignore>
		<attribute arch="material" />
		<attribute arch="material_real" />
		<attribute arch="nrof" />
		<attribute arch="value" />
		<attribute arch="unpaid" />
		<attribute arch="identified" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Spawn points are used to spawn monsters. After the spawn point is
		set, one or more mobs can be added to the spawn point's
		inventory. By changing the monster type from MONSTER to
		SPAWN POINT MOB, the mob will used as prototype for a spawn. The
		map maker can set some options, like chance to spawn. When the
		spawned monster is slain, the spawn point will try to generate
		another one.
	]]>
	</description>
    <attribute arch="title" editor="group" type="string">
        Which linked group, if any, this spawn point belongs to. Monsters
        in linked groups will make all of the monsters attack an enemy
        when one of them is attacked.
    </attribute>
	<attribute arch="speed" editor="speed" type="float">
		The &lt;speed&gt; determines how often a spawn point will control
		itself and/or its monster. If there is no monster, the spawn
		point will try to spawn a new one.
	</attribute>
	<attribute arch="last_grace" editor="spawn chance" type="int">
		Defines the base spawn chance. Value 0 means spawn try every
		active phase. -1 means no spawn try. Values > 0 means spawn
		chance is 1 / value + 1.
	</attribute>
	<attribute arch="sp" editor="forced spawn" type="int">
		If -1 at start, the spawn point will do a normal spawn. If set to
		0-9999, the spawn point will be forced to spawn the mob with the
		nearest set chance (lower or same value) ONE TIME when the spawn
		point is called the first time.
	</attribute>
	<attribute arch="last_heal" editor="spawn range" type="int">
		Size of an area around the spawn point where the mob should be
		placed randomly. If this value is set to 0, spawn point will find
		no free place. If set to 1, it tests the space where the spawn
		point itself is. Increasing the value will start a search around
		the spot, starting in the south. value 2 searches spot 0, -1,
		value 3 spot 1, -1, 4 = 0, -1, etc.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		If a connection value is set, the spawn point will try to spawn
		whenever the connection is triggered.
		If you set this, you should also set "speed" and "spawn chance"
		to 0.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
</type>

<type number="83" name="Spawn Point Monster" inv="81" map="no">
	<import_type name="Monster &amp; NPC" />
	<ignore>
		<attribute arch="material" />
		<attribute arch="material_real" />
		<attribute arch="nrof" />
		<attribute arch="speed_left" />
		<attribute arch="value" />
		<attribute arch="unpaid" />
		<attribute arch="identified" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Spawn Point Monsters are Monsters, put in the inventory of a
		spawn point and used as prototype for map spawn. The spawn point
		will set a copy of this object on the map, resetting it to a
		normal MONSTER.
	]]>
	</description>
	<section name="spawn-settings">
		<attribute arch="object_int1" editor="chance to spawn" type="int">
			The spawn point will use a random number between 0-9999 to
			find a usable mob to spawn. If this value is nearest but not
			higher, this mob is selected. A number of 0 and only one mob
			in the spawn point means this mob is spawned always. A number
			of 5000 means a 50% chance to spawn.
		</attribute>
		<attribute arch="last_eat" editor="darkness to spawn" type="int">
			The monster will:
			a) Only spawn when this darkness setting is the same as the
			   map's darkness
			b) If the monster is spawned already and the darkness changes
			   to an invalid value, the spawn point will remove the
			   monster.

			A positive darkness value means "if higher". A negative
			darkness value means "if lower" from absolute value.

			A value of 4 means monster will be shown until darkness drops
			to 4 or lower. A value of -4 means monster will be shown
			until darkness is 4 or higher.

			0 means "show always" (default).
		</attribute>
		<attribute arch="spawn_time" editor="spawn time range" type="string">
			The monster will only spawn if the in-game time matches this
			time range, in the format of, for example, "06:30 - 18:00".
			Such time range would only allow the monster to be spawned
			between 6:30 AM and 6:00 PM, in-game time.
		</attribute>
	</section>
</type>

<type number="40" name="Mover" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Movers move the objects above them. However, only living objects
		are affected (monsters/NPCs always, players optional). Movers have
		a direction, so players can be made to move in a pattern, and so
		can monsters. Motion is involuntary. Additionally, players or
		monsters can be "frozen" while ontop of movers so that they MUST
		move along a chain of them.
		<br><br>
		Multisquare monsters can be moved as well, given
		enough space. Movers are usually invisible.
	]]>
	</description>
	<use>
	<![CDATA[
		NEVER EVER consider a mover being unpassable in the backwards
		direction. Setting force movement makes it seemingly impossible
		but there is still a trick: One player can push a second player
		past the mover, in opposite to the mover's direction! The more
		movers, the more players needed. Hence, don't make a treasure
		room that is surrounded by movers instead of solid walls/gates.
		<br><br>
		Btw, it does not make a difference putting movers above or
		below the floor. Moreover, movers that are set to be invisible
		cannot be discovered with the show_invisible spell.
		<br><br>
		Note that Movers and Directors are seperate objects, even though
		they look and act similar. Directors only do spells/missiles,
		while movers only do living creatures (depending on how it
		is set: monsters and players).
	]]>
	</use>
	<attribute arch="sp" editor="forced movement" type="bool">
		If forced movement is enabled, the mover "freezes" anyone it
		moves (so they are forced to move along a chain). For players
		there is no way to escape this forced movement.
	</attribute>
	<attribute arch="maxsp" editor="freeze duration" type="int">
		The player will be "frozen" for that many moves. If
		&lt;freeze duration&gt; is zero, with &lt;forced movement&gt;
		enabled, then &lt;freeze duration&gt; gets assigned the
		"default value" 2 automatically.
	</attribute>
	<attribute arch="speed" editor="movement speed" type="float">
		The movement speed value determines how fast a chain of these
		movers will push a player along (default is -0.2).
	</attribute>
	<attribute arch="lifesave" editor="gets used up" type="bool">
		If enabled, the mover gets "used up" after a certain number of
		moves (specified by &lt;number of uses&gt;). If disabled, the
		mover works infinitly.
	</attribute>
	<attribute arch="hp" editor="number of uses" type="int">
		This value has only a meaning if &lt;gets used up&gt; is set:
		&lt;number of uses&gt; is the number of times minus one, that it
		will move a creature before disappearing. It will move someone
		&lt;number of uses&gt; + 1 times, then vanish.
	</attribute>
	<attribute arch="xrays" editor="use victim's direction" type="bool">
		If a mover has no direction, the normal behavior is to choose
		a random direction. However, with this flag, the direction the
		mover will move its victims depends on the victim's actual direction.
	</attribute>
	<attribute arch="stand_still" editor="stop before walls" type="bool">
		Will not attempt to move victims into walls.
	</attribute>
	<attribute arch="is_magical" editor="only move periodically" type="bool">
		The mover will only move objects periodically, never as an event
		of walk/fly on/off. This is useful if you have a mover that
		freezes the player and you want to make sure that players with high
		speed attributes can't just fly past your movers.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
	    Whether to trigger the mover when an object walks on top of it.
	</attribute>
	<attribute arch="walk_off" editor="walk off" type="bool">
	    Whether to trigger the mover when an object walks on off of it.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
	    Whether to trigger the mover when an object flies on top of it.
	</attribute>
	<attribute arch="fly_off" editor="fly off" type="bool">
	    Whether to trigger the mover when an object flies off top of it.
	</attribute>
	<section name="targets">
		<attribute arch="level" editor="move players" type="bool">
			Move players.
		</attribute>
		<attribute arch="hp" editor="move walking creatures" type="bool">
			Move creatures/monsters/NPCs.

			This feature provides you with the possibility to make NPCs
			literally "come to life". Example: The player is talking with
			an NPC, speaking a certain keyword. This triggers a magic ear
			and activates creators, creating (per default: monster-only)
			movers under the NPC's feet. The NPC starts "walking" on a
			predefined route!
		</attribute>
		<attribute arch="maxhp" editor="move flying creatures" type="bool">
			Move flying creatures enabled means all flying (living)
			objects will get moved too. If disabled, only walking
			(non-flying) creatures will get moved.
		</attribute>
	</section>
</type>

<type number="17" name="Pedestal" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Pedestals can be used to detect a mobile object moving over the
		pedestal, using pre-defined set of matching rules. All of the set
		rules must match for the pedestal to trigger its connection value.

		If there are no match rules set, the pedestal will trigger for
		any object moving on top of it.
	]]>
	</description>
	<attribute arch="hp" editor="match type" type="int">
		Type of the object to match.
	</attribute>
	<attribute arch="slaying" editor="match name" type="string">
		Name of the object to match.
	</attribute>
	<attribute arch="race" editor="match archname" type="string">
		Archname of the object to match.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		When the pedestal is triggered, all objects with the same
		connection value get activated.
	</attribute>
	<attribute arch="last_eat" editor="connection flag" type="bool">
		Signals the connected objects to do a different action. See the
		help file for the object you are connecting this to for details
		what this setting will affect.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="path_repelled" editor="tiled maps" type="bitmask_tile_dir">
	    Tiled maps to load and look for connected objects on.
	</attribute>
	<attribute arch="exp" editor="reset time" type="int">
		Being activated, the pedestal will reset after "reset time"
		ticks. After reset, the pedestal is ready to be activated once
		again.
	</attribute>
	<attribute arch="connect_reset" editor="reset connection" type="bool">
		Will reset the connection, so it will be triggered next time something
		triggers the object, even if it was not released before. For example, if this is set:

		1.) Player A moves onto a pedestal. The connection of the pedestal is triggered.
		2.) Player B moves onto the same pedestal, again the connection is triggered.
		3.) Player A moves off the pedestal, the connection is triggered.

		Part 3 can be avoided if this option is combined with "walk off" unset.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
		Whether to trigger the connection when an object walks on the
		pedestal.
	</attribute>
	<attribute arch="walk_off" editor="walk off" type="bool">
		Whether to trigger the connection when an object walks off the
		pedestal. Should be left on, unless "reset connection" is enabled
		or "walk on" is disabled.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
		Whether to trigger the connection when an object flies on the
		pedestal.
	</attribute>
	<attribute arch="fly_off" editor="fly off" type="bool">
		Whether to trigger the connection when an object flies off the
		pedestal. Should be left on, unless "reset connection" is enabled
		or "fly on" is disabled.
	</attribute>
</type>

<type number="51" name="Detector" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Detectors are like pedestals, but they always trigger depending
		on the move/fly on/off settings, and do not require the "release"
		event that pedestals usually need. They can also remove matching
		objects.
	]]>
	</description>
	<attribute arch="hp" editor="match type" type="int">
		Type of the object to match.
	</attribute>
	<attribute arch="slaying" editor="match name" type="string">
		Name of the object to match.
	</attribute>
	<attribute arch="race" editor="match archname" type="string">
		Archname of the object to match.
	</attribute>
	<attribute arch="last_heal" editor="remove match" type="bool">
		If set, the matching object will be removed.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		When the detector is triggered, all objects with the same
		connection value get activated.
	</attribute>
	<attribute arch="last_eat" editor="connection flag" type="bool">
		Signals the connected objects to do a different action. See the
		help file for the object you are connecting this to for details
		what this setting will affect.
	</attribute>
	<attribute arch="path_repelled" editor="tiled maps" type="bitmask_tile_dir">
	    Tiled maps to load and look for connected objects on.
	</attribute>
	<attribute arch="walk_on" editor="walk on" type="bool">
		Whether to trigger the connection when an object walks on the
		detector.
	</attribute>
	<attribute arch="walk_off" editor="walk off" type="bool">
		Whether to trigger the connection when an object walks off the
		detector.
	</attribute>
	<attribute arch="fly_on" editor="fly on" type="bool">
		Whether to trigger the connection when an object flies on the
		detector.
	</attribute>
	<attribute arch="fly_off" editor="fly off" type="bool">
		Whether to trigger the connection when an object flies off the
		detector.
	</attribute>
</type>

<type number="86" name="Organic">
	<ignore>
		<attribute arch="speed_left" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		These are body parts which can't be eaten (dragon scales, hair,
		etc).
	]]>
	</description>
</type>

<type number="5" name="Potion">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		The player can drink these and gain various kinds of benefits
		(/penalties) by doing so.
	]]>
	</description>
	<use>
	<![CDATA[
		One potion should never give multiple benefits at once.
	]]>
	</use>
	<attribute arch="level" editor="potion level" type="int">
		If the potion contains a spell, the spell is cast at this level.
		For other potions it should be set to at least 1.
	</attribute>
	<attribute arch="sp" editor="spell" type="nz_spell">
		When a player drinks this potion, the selected spell will be cast
		once. This should work for any given spell.

		last_eat must be 0 to invoke the spell effect!
	</attribute>
	<attribute arch="last_eat" editor="special potion" type="int">
		If this value is 0, the potion will invoke a spell effect when
		used. If set to -1, the potion will create a force when used and
		grant the user with the effects set (stats bonuses, resists, etc).
		Values higher than 0 are used internally for special potions -
		don't play around with it here!
	</attribute>
	<attribute arch="last_grace" editor="throw speed" type="int">
		If throwable, this value in ticks defines how long it needs
		before the player can throw something again. The value is in
		ticks.
		8 ticks are a second.
	</attribute>
	<attribute arch="last_sp" editor="throw range" type="int">
		This value is supposed to be the base &lt;throw range&gt;.
		The value is only valid for potions which can be thrown.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<section name="stats">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
	</section>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
</type>

<type number="156" name="Power Crystal">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Power crystals can store a player's mana: When the player applies
		the crystal with full mana, half of it flows into the crystal.
		When the player applies it with lacking mana, the crystal
		replenishes the player's mana.
	]]>
	</description>
	<attribute arch="sp" editor="initial mana" type="int">
		&lt;initial mana&gt; is the amount of spellpoints that the
		crystal holds when the map is loaded.
	</attribute>
	<attribute arch="maxsp" editor="mana capacity" type="int">
		The &lt;mana capacity&gt; defines how much mana can be stored in
		the crystal. This is what makes the crystal interesting. Wizards
		will always seek crystals with large capacities.
	</attribute>
</type>

<type number="13" name="Projectile">
	<ignore>
		<attribute arch="sub_type" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Projectiles like arrows/crossbow bolts are used as ammunition for
		shooting weapons.
		<br><br>
		It's very easy to add new pairs of weapons &amp; projectiles.
		Just set matching &lt;ammunition class&gt; both for shooting
		weapon and projectile.
	]]>
	</description>
	<use>
	<![CDATA[
		If you want to create new kinds of projectiles, you could add an
		alchemical recipe to create them.

		Don't create new pairs of weapons and projectiles unless they
		really fullfill a useful purpose.
	]]>
	</use>
	<attribute arch="sub_type" editor="ammunition type" type="list_projectile_st">
		The &lt;ammunition type&gt; defines what kind of shooting weapon
		is able to fire these projectiles. Note that the
		&lt;ammunition class&gt; has to match as well.
	</attribute>
	<attribute arch="race" editor="ammunition class" type="string">
		Only shooting weapons with matching &lt;ammunition class&gt; (and
		matching &lt;ammunition type&gt;) can fire these projectiles. For
		arrows set "arrows", for crossbow bolts set "crossbow bolts" (big
		surprise).

		You can also make special containers holding these projectiles
		by setting the &lt;container class&gt; to match your
		&lt;ammunition class&gt;.
	</attribute>
	<attribute arch="slaying" editor="slaying race" type="string">
		Slaying means the weapon does triple (3x) damage to monsters of
		the specified race. If &lt;slaying race&gt; matches an arch name,
		only monsters of that archetype receive triple damage.

		Triple damage is very effective, especially on higher levels.
	</attribute>
	<attribute arch="dam" editor="damage" type="int">
		The projectile &lt;damage&gt; significantly affects the damage
		done. Damage can be further increased by the shooting weapon's
		attributes.
	</attribute>
	<attribute arch="last_grace" editor="shooting speed" type="int">
		After shooting the player can't do a second shoot for some time.
		This value + the bow shooting delay (different bows can have
		different delay) will determine the time the player must wait.
		The value is in ticks.
		8 ticks are one second.
	</attribute>
	<attribute arch="last_sp" editor="throw/shooting range" type="int">
		This value is supposed to be the base
		&lt;throw or shooting range&gt;. For ammunition like arrows or
		bolts, the value is a base value which is added to the shooting
		weapon base value (bow, crossbow, sling).
	</attribute>
	<attribute arch="wc" editor="weaponclass" type="int">
		This value is supposed to be the base &lt;weaponclass&gt;.
	</attribute>
	<attribute arch="magic" editor="magic bonus" type="int">
		Magic bonus increases chance to hit and damage a little bit.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch="no_drop" editor="don't drop" type="bool">
		When a monster carries a projectile with &lt;don't drop&gt;, this
		item will never drop to the ground but vanish instead. If this
		object is shot, it can still drop after hitting an obstacle.
	</attribute>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may describe the projectile. This could be nice for
		very special ones.
	</attribute>
</type>

<type number="154" name="Rune" inv="122">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A rune is a magical enscription on the dungeon floor. Traps are
		just like runes except they are not magical in nature, and
		generally have a physical attack.
		<br><br>
		Runes hit any monster or person who steps on them for 'dam'
		damage with specified attack type. Alternatively, the rune could
		contain any spell, and will cast this spell when it detonates.
		<br><br>
		Many traps and runes are already defined in the archetypes.
	]]>
	</description>
	<attribute arch="no_pick" value="1" type="fixed" />
	<attribute arch="walk_on" value="1" type="fixed" />
	<attribute arch="level" editor="rune level" type="int" min="0" max="115">
		This value sets the level the rune will cast the spell it
		contains at, if applicable. A level 99 rune casts a very, very
		mean spell of whatever. (&lt;rune level&gt; 0 runes won't
		detonate at all!)

		Level also affects how easily a trap may be found and disarmed,
		and how much experience the player gets for doing so. Beware:
		High level runes can be quite a cheap source of experience! So
		either make them tough, or keep the level low.
	</attribute>
	<attribute arch="cha" editor="visibility" type="int">
		Affects how easily the trap may be found.
	</attribute>
	<attribute arch="hp" editor="number of charges" type="int">
		The rune will detonate &lt;number of charges&gt; times before disappearing.
		If -1, the rune will detonate infinitely, or at least until it's successfully
		disarmed.
	</attribute>
	<attribute arch="dam" editor="direct damage" type="int">
		&lt;direct damage&gt; specifies how much damage is done by the
		rune, if it doesn't contain a spell. This should be set in
		reasonable relation to the rune's level.
	</attribute>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<section name="spellcraft">
		<attribute arch="sp" editor="spell" type="nz_spell">
			The selected &lt;spell&gt; defines the spell in the rune, if
			any. Many runes and all traps do direct damage.
		</attribute>
		<attribute arch="maxsp" editor="invoke direction" type="list_direction">
			If set, the rune will cast its spell (if any) in this direction.
			In most cases this appears useless because the spell directly
			hits the player.
		</attribute>
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="detonation text" type="text">
		When the rune detonates, this text is displayed to the victim.
		For especially powerful runes, create an appropriate thrilling
		description. ;)
	</attribute>
</type>

<type number="106" name="Savebed" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When the player applies a savebed, he is not only saved, but both
		his respawn-after-death and his word-of-recall positions are
		pointing to the last-applied savebed.
		<br><br>
		Savebeds, also commonly known as 'beds to reality' are often
		found in player apartments and local taverns.
	]]>
	</description>
	<use>
	<![CDATA[
		Put savebed locations in towns, do not put them into dungeons.
		It is absolutely neccessary that a place with savebeds is 100%
		secure.
		<br><br>
		That means:
		<ul>
			<li>Monsters must not be able to reach the savebeds under any
			    circumstances!</li>
			<li>If there are NPCs around, make sure they have the
			    friendly-flag set.</li>
			<li>Insert a reliable exit! Make sure there is no possibility
			    that players get trapped in a savebed location.</li>
		</ul>
	]]>
	</use>
	<attribute arch="no_pick" value="1" type="fixed" />
	<attribute arch="no_magic" value="1" type="fixed" />
	<attribute arch="damned" value="1" type="fixed" />
</type>

<type number="14" name="Shooting Weapon">
	<ignore>
		<attribute arch="sub_type" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Schooting weapons like bows/crossbows are used to shoot
		projectiles (arrows/bolts). Shooting weapons and normal (melee)
		weapons can be wielded both at the same time. Like with any other
		equipment, stats/bonuses from shooting weapons are directly
		inherited by the player.
		<br><br>
		It's very easy to add new pairs of weapons &amp; projectiles.
		Just set matching &lt;ammunition class&gt; both for shooting
		weapon and projectile.
	]]>
	</description>
	<use>
	<![CDATA[
		Shooting weapons should not add bonuses in general. There's
		already enough "equipment-slots" doing that: swords, rings,
		amulets, girdles etc.

		Shooting weapons should especially not add bonuses to the player
		that have nothing to do with shooting. A wisdom bonus on a bow
		is crap for example! A name like "Longbow of great Wisdom"
		doesn't help - still crap.
	]]>
	</use>
	<attribute arch="sub_type" editor="weapon type" type="list_shootweapon_st">
		The &lt;weapon type&gt; characterizes the type of shooting weapon
		this is. Each of these weapon types requires an according skill
		to be used.
	</attribute>
	<attribute arch="race" editor="ammunition class" type="string">
		Only projectiles with matching &lt;ammunition class&gt; can be
		fired with this weapon. For normal bows set "arrows", for normal
		crossbows set "crossbow bolts".

		In certain cases, the ammunition class is displayed in the game.
		Hence, when you create a new ammunition class, choose an
		intuitive name like "missiles", "spirit bolts" - whatever.
	</attribute>
	<attribute arch="sp" editor="shooting speed" type="int">
		After shooting the player can't do a second shoot for some time.
		This value + the arrow shooting delay (different arrows can have
		different delay) will determine the time the player must wait.
		The value is in ticks.
		8 ticks are one second.
	</attribute>
	<attribute arch="last_sp" editor="shooting range" type="int">
		This value is supposed to be the base &lt;shooting range&gt;.
		It is added to the base range of the used ammunition (arrow,
		bolt, etc).
	</attribute>
	<attribute arch="dam" editor="base damage" type="int">
		The &lt;base damage&gt; significantly affects the damage done by
		using this weapon. This damage is added to the projectile damage
		and then (if &lt;ignore strength&gt; disabled) a bonus according
		to the player's strength is added.
	</attribute>
	<attribute arch="wc" editor="weaponclass" type="int">
		This value is supposed to be the base &lt;weaponclass&gt;, but it
		seems to have rather little effect. High values are good here,
		low values bad.
	</attribute>
	<attribute arch="wc_range" editor="wc hit range" type="int">
		The wc_range of an archery weapon is copied to the projectile
		which is fired with it.
	</attribute>
	<attribute arch="item_level" editor="required level" type="int">
		If &lt;required level&gt; is set to a value greater than zero,
		players cannot use the weapon unless they meet this level in the
		skill category specified by &lt;level required in&gt;.

		For example: &lt;required level&gt; = 15, &lt;level required in&gt;
		= physical means the player cannot use the weapon unless he is
		equal or greater than level 15 in the physical skill category.
	</attribute>
	<attribute arch="item_skill" editor="level required in" type="list_item_skill">
		This attribute specifies in which skill category the player must
		meet the &lt;required level&gt; in order to use the weapon.
		It is meaningless when &lt;required level&gt; is zero/unset.

		For example: &lt;required level&gt; = 15, &lt;level required in&gt;
		= physical means the player cannot use the weapon unless he is
		equal or greater than level 15 in the physical skill category.
	</attribute>
	<attribute arch="no_strength" editor="ignore strength" type="bool">
		Usually the player's strength takes effect on the damage done by
		the shooting weapon. If &lt;ignore strength&gt; is set, the
		player's strength is ignored.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<section name="stats">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
	</section>
	<section name="bonus">
		<attribute arch="magic" editor="magic bonus" type="int">
			&lt;Magic bonus&gt; improves the quality of the shooting
			weapon. I'm not sure what exactly is increased - maybe
			weaponclass? However, &lt;magic bonus&gt; seems to have a
			little bit of positive influence on your chance to hit.
		</attribute>
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text describes the weapons's "story". Every decent artifact
		weapon should have such a description.
	</attribute>
</type>

<type number="111" name="Scroll">
	<ignore>
		<attribute arch="title" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Scrolls contain spells (similar to spell-potions). Unlike
		potions, scrolls require a certain literacy skill to read
		successfully.

		Accordingly, for a successful reading, a small amount of
		experience is gained. Scrolls allow only one time usage, but
		usually they are sold in bulks.
	]]>
	</description>
	<use>
	<![CDATA[
		For low level quests, scrolls of healing/curing spells can be a
		nice reward. At higher levels, scrolls become less and less
		useful.
	]]>
	</use>
	<attribute arch="level" editor="casting level" type="int">
		The spell of the scroll will be casted at this level. This value
		should always be set, to at least 1.
	</attribute>
	<attribute arch="sp" editor="spell" type="nz_spell">
		When a player/monster applies this scroll, the selected
		&lt;spell&gt; will be cast (once). This should work for any given
		spell.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
</type>

<type number="68" name="Shop Floor" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Shop floor is used for shops. It acts like a combination of the
		common floor and the treasure type: When the map is loaded,
		randomitems (depending on the setings) are generated on it.

		When a player drops an item onto shop floor, the item becomes
		unpaid and the player receives payment according to the item's
		value, calculated by various factors.
		Usually the value is 20% of the item's real value.

		Shop floor always prevents magic (to hinder players from burning
		or freezing the goods).
	]]>
	</description>
	<use>
	<![CDATA[
		Tile your whole shop interior space which shop floor, which
		assures players receive payment for dropping items.
		Place shop mats to enter/leave the shop, and make sure
		there is no other exit than the shop mat.
	]]>
	</use>
	<attribute arch="is_floor" value="1" type="fixed" />
	<attribute arch="no_pick" value="1" type="fixed" />
	<attribute arch="no_magic" value="1" type="fixed" />
	<attribute arch="auto_apply" editor="generate goods" type="bool">
		If enabled, items will appear on this square when the map is
		loaded. You need to specify a &lt;treasurelist&gt; to define what
		kinds of items are generated. The items will be unpaid and marked
		as "clone items", unless &lt;don't clone randomitems&gt; is set.
	</attribute>
	<attribute arch="cursed" editor="don't clone randomitems" type="bool">
		Only has meaning if &lt;generate goods&gt; is enabled. If this is
		enabled, random generated items will not be clone items.
	</attribute>
	<attribute arch="damned" editor="no artifacts" type="bool">
		Only has meaning if &lt;generate goods&gt; is enabled. If this is
		enabled, random generated items will never be artifacts.
 	 </attribute>
	<attribute arch="randomitems" editor="treasurelist" type="treasurelist">
		This entry determines what kind of treasure will appear, when
		&lt;generate goods&gt; is enabled.
	</attribute>
	<attribute arch="exp" editor="quality level" type="int">
		The &lt;quality level&gt; will be used for the quality of the
		generated goods. If zero/unset, map difficulty's level is used.
		Usually this value doesn't need to be set, unless you want
		extraordinarily good/bad quality. If you want to make a shop with
		very high quality, maybe charge an entrance fee, or make the shop
		hard-to-come-by.

		Note that &lt;quality level&gt; mainly affects chance of magic
		bonus and appearance of artifacts.
	</attribute>
	<attribute arch="is_magical" editor="unique shop" type="bool">
		If enabled, this shop floor will be marked as
		&lt;unique shop&gt;, which means any item sold on it will remain
		there until a map reset, or until somebody buys it.
	</attribute>
</type>

<type number="69" name="Shop Mat" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Shop mats are used for entering/leaving shops. You should always
		have exactly TWO shop mats on your shop-map: One inside the
		"shopping-area" and one outside. Shop mats don't use exit paths
		or coordinates. When stepping onto a shopmat the player gets
		beamed to the nearest other mat. If the player has unpaid items
		in his inventory, the price gets charged from his coins
		automatically. If the player has insufficient coins to buy his
		unpaid items, he is unable to pass any shopmat (so he has to drop
		unpaid items).
	]]>
	</description>
	<use>
	<![CDATA[
		As stated above, always place TWO shop mats into your shop. Not
		more and not less than that.
	]]>
	</use>
	<attribute arch="no_pick" value="1" type="fixed" />
	<attribute arch="walk_on" editor="apply by walking" type="bool">
		If set, the player can enter/leave the shop by just walking into
		the shop mat.
	</attribute>
	<attribute arch="fly_on" editor="apply by flying" type="bool">
		If set, the player can enter/leave the shop by "flying" into the
		shop mat.
	</attribute>
</type>

<type number="98" name="Sign" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		The purpose of a sign or magic mouth is to display a certain
		message to the player. There are three ways to have the player
		get this message:

		The player walking onto it (magic mouth), the player pressing
		apply (sign) or the player triggering a button/handle/etc (magic mouth).
	]]>
	</description>
	<use>
	<![CDATA[
		Use signs and magic mouths, plenty of them! Place magic mouths to
		add some true roleplay feeling to your maps, support your
		storyline or give hints about hidden secrets/dangers. Place signs
		to provide the player with all kinds of useful information for
		getting along in your maps.
	]]>
	</use>
	<attribute arch="connected" editor="connection" type="int">
		When a connection value is set, the message will be printed
		whenever the connection is triggered. This should be used in
		combination with &lt;invisible&gt; enabled and
		&lt;activate by walking/flying&gt; disabled. If activating your
		magic mouth this way, the message will not only be printed to one
		player, but all players on the current map.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="walk_on" editor="activate by walking" type="bool">
		If set, the player gets the message when walking ontop of the
		object. This is the typical configuration for a magic mouth: The
		player walks through a dungeon and suddenly he gets a message.
		Use this to create some roleplay atmosphere, and to inform the
		player about possible dangers or secrets.
	</attribute>
	<attribute arch="fly_on" editor="activate by flying" type="bool">
		If set, the player gets the message when flying (=levitating)
		ontop of the object. Usually this should be set together with
		walk_on.
	</attribute>
	<attribute arch="food" editor="counter" type="int">
		If a counter value is set (greater than zero), the sign/magic
		mouth can be applied (printing the message) only that many times.
		For signs this really shouldn't be used, while for magic mouths
		it is extremely helpful. Monsters walking over the magic mouth do
		not decrease the counter.

		Often, you might want to have a message displayed only once. For
		example: The player enters your map and you put a magic mouth to
		tell him about the monsters and how dangerous they look and all.
		Later, when all the monsters are killed and the player leaves the
		map, displaying the same message a second time would be silly.
		&lt;counter&gt; 1 does a perfect job in such cases. Otherwise set
		&lt;counter&gt; zero/unset for infinite use (that is the
		default).
	</attribute>
	<attribute arch="slaying" editor="match key string" type="string">
		This string specifies the object we are looking for: We have a
		match if the player does/don't carry a key object or a mark with
		identical &lt;key string&gt;. This string is compared to the name
		of an object. If the "match = slaying field" is set, the text is
		compared to the slaying field of the object we search for. This
		can make sense if we really want avoid any problems with user set
		names of objects.
	</attribute>
	<attribute arch="sp" editor="match = slaying field" type="bool">
		Enabled means key text is compared to the slaying field of an
		object and NOT to the name.
	</attribute>
	<attribute arch="race" editor="match arch name" type="string">
		This string specifies the object we are looking for: We have a
		match if the player does/don't carry an object of archetype
		&lt;match arch name&gt;.
	</attribute>
	<attribute arch="hp" editor="match type" type="int">
		This value specifies the object we are looking for: We have a
		match if the player does/don't carry an object that is of type
		&lt;match type&gt;.
	</attribute>
	<attribute arch="last_sp" editor="match = having" type="bool">
		Enabled means having that object is a match. Disabled means not
		having that object is a match.
	</attribute>
	<attribute arch="splitting" editor="adjacent direction" type="bool">
		If direction is set and this is set as well, two adjacent directions
		will be considered instead of just the one direction.
	</attribute>
	<attribute arch="xrays" editor="use book GUI" type="bool">
		If set, instead of printing the sign's contents to text window, use the
		book GUI to show the message, using any fancy formatting books allow.
	</attribute>
	<attribute arch="title" editor="sound effect" type="string">
		Optional sound effect to play when the sign is read (or triggered,
		in case of magic mouths).
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
		This text will be displayed to the player.
	</attribute>
	<section name="notification">
		<attribute arch="notification_message" editor="message" type="string">
			Notification message to show below the map name.
		</attribute>
		<attribute arch="notification_action" editor="action" type="string">
			Action to execute when the notification is triggered - either a
			keybinding macro (starting with a question mark, for example,
			?HELP), or a command beginning with a slash.
		</attribute>
		<attribute arch="notification_shortcut" editor="shortcut" type="string">
			Keybinding macro that will be temporarily used for the notification -
			for example, one could use ?CONSOLE to make the enter key (default)
			execute the notification action - until the notification disappears
			(fade out, or dismissed by actually triggering its action).
		</attribute>
		<attribute arch="notification_delay" editor="delay" type="int">
			Time in milliseconds that the notification will stay visible.
			About 5 seconds before the time runs out, the notification will
			start fading out (thus, the client forces the delay to be at least
			5 seconds, even if you use a smaller value). The default delay is
			30 seconds.
		</attribute>
	</section>
</type>

<type number="21" name="Key">
	<ignore>
		<attribute arch="material" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When carrying the appropriate special key, a locked door can be
		opened. The key will dissapear.
	]]>
	</description>
	<attribute arch="slaying" editor="key string" type="string">
		This string must be identical with the &lt;key string&gt; in the
		locked door, then it can be unlocked. It can also be used to
		trigger inventory checkers.
	</attribute>
	<attribute arch="material" editor="material class" type="bitmask_material">
		For Special Keys, material should always be set to "0" (no
		material) or "256" (adamantite). This prevents the key from
		getting burned or otherwise destroyed.
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This will add a description to the object. The player can read
		this text by clicking on the item in his inventory. Use this
		message to describe what the key is good for. A player might
		have 50 different keys on his key-ring. Don't expect players
		to recall their purpose just by their names.
	</attribute>
</type>

<type number="90" name="Spinner" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Spinners change the direction of spell objects and other
		projectiles that fly past. Unlike directors, it does make a
		difference from what angle you shoot into the spinner. The
		direction of objects flying past is always changed by a certain
		degree. The spinner will change the direction of flying objects
		by 45 degrees per &lt;direction number&gt;.

		Example: &lt;direction number&gt; 2 means spin 90 degrees clockwise.
	]]>
	</description>
	<use>
	<![CDATA[
		Spinners are very rarely used. One use of them is in mazes or
		building some puzzle about where to shoot into spinners to shoot
		somewhere you otherwise couldn't.

		When placing spinners on a map with magic walls, make sure the
		spell projectiles from magic walls don't get to fly in loops.
	]]>
	</use>
	<attribute arch="walk_on" value="1" type="fixed" />
	<attribute arch="fly_on" value="1" type="fixed" />
</type>

<type number="41" name="Teleporter" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		When the player walks into a teleporter, he is transferred to a
		different location. The main difference to the object-type exit
		is the possibility to have teleporters connected to
		levers/buttons/etc.
		Sometimes teleporters are activated even against the players will.
		<br><br>
		Unlike exits, teleporters can also transfer items and monsters to
		different locations on the same map.
	]]>
	</description>
	<attribute arch="slaying" editor="exit path" type="map_path">
		The exit path defines the map that the player is transferred to.

		You can enter an absolute path, beginning with '/' (for example
		"/tutorial"). It can also be a relative path, not beginning with
		'/' (on the map "/shattered_islands/world_0303" for example I
		could use the relative path "0304"). Use relative paths whenever
		possible! Note that upper/lower case must always be set
		correctly. However, please use lower case only.

		It is well possible to have an exit pointing to the same map that
		the exit is on. If slaying is not set in an exit, the player will
		see a message like "The exit is closed".
	</attribute>
	<attribute arch="hp" editor="destination X" type="int">
		The exit destinations define the (x, y)-coordinates where the exit
		leads to.

		If both are set to zero and &lt;exit path&gt; is empty, the player will
		get teleported to another, randomly chosen teleporter on the same
		map (slightly confusing for the player though). Make sure there
		actually *is* a second one in that case.
	</attribute>
	<attribute arch="sp" editor="destination Y" type="int">
		The exit destinations define the (x, y)-coordinates where the exit
		leads to.

		If both are set to zero and &lt;exit path&gt; is empty, the player will
		get teleported to another, randomly chosen teleporter on the same
		map (slightly confusing for the player though). Make sure there
		actually *is* a second one in that case.
	</attribute>
	<attribute arch="connected" editor="connection" type="int">
		If a connection value is set, the teleporter will be activated
		whenever the connection is triggered. To use this properly,
		&lt;activation speed&gt; must be zero.
	</attribute>
	<attribute arch="connect_no_release" editor="ignore connection release" type="bool">
		If set, connection triggers that were done because something (such
		as a button being unpressed) was released will be ignored.
	</attribute>
	<attribute arch="connect_no_push" editor="ignore connection push" type="bool">
		If set, connection triggers that were done because something (such
		as a button being pressed) was pushed will be ignored.
	</attribute>
	<attribute arch="speed" editor="activation speed" type="float">
		If the &lt;activation speed&gt; is nonzero, the teleporter will
		automatically be activated in regular time-intervals. Hence, the
		player can just step on it and gets teleported sooner or later.
		The duration between two activates depends on the given value.
		Default in the teleporter arch is &lt;activation speed&gt; 0.1.

		VERY IMPORTANT: If you want to have your teleporter activated via
		button/handle/magic_ear/etc, you must set
		&lt;activation speed&gt; to zero!
	</attribute>
</type>

<type number="4" name="Treasure">
	<ignore>
		<attribute arch="nrof" />
		<attribute arch="title" />
		<attribute arch="value" />
		<attribute arch="weight" />
		<attribute arch="material" />
		<attribute arch="material_real" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		A treasure-object turns into certain randomitems when the map is
		loaded into the game.
	]]>
	</description>
	<attribute arch="randomitems" editor="treasurelist" type="treasurelist">
		This entry determines what kind of treasure will appear.
	</attribute>
	<attribute arch="exp" editor="quality level" type="int">
		The &lt;quality level&gt; will be used for the quality of the
		generated treasure instead of the map difficulty (as was done
		with shops).

		If zero/unset, the map difficulty will instead be used.
	</attribute>
</type>

<type number="15" name="Weapon">
	<ignore>
		<attribute arch="sub_type" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wielding a weapon, the object's stats will be directly inherited
		by the player, usually enhancing his fighting-abilities. Non
		magical weapons can be improved with scrolls.
	]]>
	</description>
	<attribute arch="sub_type" editor="weapon type" type="list_weapon_st">
		The &lt;weapon type&gt; characterizes the type of weapon. Each of
		these weapon types requires an according skill to be used. You
		should always set this correctly when creating new weapons for
		your maps.
	</attribute>
	<attribute arch="dam" editor="damage" type="int">
		The damage value is used as base value for how much damage the
		weapon does per hit. The actual damage involves more
		dependencies, like wielder's level and defender's level. Look at
		existing weapons to get a feel for the range of weapon damage values.
	</attribute>
	<attribute arch="slaying" editor="slaying race" type="string">
		Slaying means the weapon does triple (3x) damage to monsters of
		the specified race. If &lt;slaying race&gt; matches an arch name,
		only monsters of that archetype are hit with triple damage.
	</attribute>
	<attribute arch="weapon_speed" editor="weapon speed" type="float">
		The weapon speed determines how often the wielder can swing the
		weapon during a certain period of time. The lower the faster,
		&lt;weapon speed&gt; 1 is best (that is lighting fast). A typical
		average value is 8. Speed and damage should be kept in reasonable
		relation.
	</attribute>
	<attribute arch="wc" editor="weapon class" type="int">
		The weapon class value adds to the overall weapon class of the
		wielder's melee attacks. Weapon class improves the chance of
		hitting the opponent.
	</attribute>
	<attribute arch="magic" editor="magic bonus" type="int">
		For a weapon, magic bonus works just like weapon class, except that
		magic bonus can be improved by the gods or reduced by acid. Hence, it is
		less useful than direct weapon class value on a weapon.
	</attribute>
	<attribute arch="item_level" editor="required level" type="int">
		If &lt;required level&gt; is set to a value greater than zero,
		players cannot use the weapon unless they meet this level in the
		skill category specified by &lt;level required in&gt;.

		For example: &lt;required level&gt; = 15, &lt;level required in&gt;
		= physical means the player cannot use the weapon unless he is
		equal or greater level than 15 in the physical skill category.
	</attribute>
	<attribute arch="item_skill" editor="level required in" type="list_item_skill">
		This attribute specifies in which skill category the player must
		meet the &lt;required level&gt; in order to use the weapon.
		It is meaningless when &lt;required level&gt; is zero/unset.

		For example: &lt;required level&gt; = 15, &lt;level required in&gt;
		= physical means the player cannot use the weapon unless he is
		equal or greater level than 15 in the physical skill category.
	</attribute>
	<attribute arch="lifesave" editor="save life" type="bool">
		An item with this flag enabled will save the players life once:
		When the player is wearing this item and his health points reach
		zero, the item disappears, replenishing the player's health and
		bringing him to hise savebed.

		An item with &lt;save life&gt; should not have any decent
		additional bonuses!
	</attribute>
	<attribute arch="unique" editor="unique item" type="bool">
		Unique items exist only one time on a server. If the item is
		taken, lost or destroyed - it's gone for good.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<section name="attack">
		<attribute arch="attack_impact" editor="impact attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slash" editor="slash attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_fire" editor="fire attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_cold" editor="cold attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_poison" editor="poison attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_acid" editor="acid attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_magic" editor="magic attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_lifesteal" editor="lifesteal attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_blind" editor="blinding attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_force" editor="force attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_drain" editor="drain attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_slow" editor="slow attack %" length="15" type="int" min="-100" max="100" />
		<attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int" min="-100" max="100" />

		<attribute arch="attack_internal" editor="internal attack %" length="15" type="int" min="-100" max="100" />
	</section>
	<section name="stats">
		<attribute arch="str" editor="strength" type="int" min="-30" max="30" />
		<attribute arch="dex" editor="dexterity" type="int" min="-30" max="30" />
		<attribute arch="con" editor="constitution" type="int" min="-30" max="30" />
		<attribute arch="int" editor="intelligence" type="int" min="-30" max="30" />
		<attribute arch="pow" editor="power" type="int" min="-30" max="30" />
	</section>
	<section name="misc">
		<attribute arch="exp" editor="speed bonus" type="int">
			Divide by ten to get the player's speed bonus from wearing
			this item.
		</attribute>
		<attribute arch="hp" editor="health regen." type="int">
			Positive &lt;health regen.&gt; bonus speeds up the player's
			healing process. Negative values slow it down.
		</attribute>
		<attribute arch="maxhp" editor="health bonus" type="int">
			Positive &lt;health bonus&gt; increases the hit points.
			Negative decreases them (decrease can't reduce the total hp of
			the wearer below 1).
		</attribute>
		<attribute arch="sp" editor="mana regen." type="int">
			Positive &lt;mana regen.&gt; bonus speeds up the player's
			mana regeneration. Negative values slow it down.
		</attribute>
		<attribute arch="maxsp" editor="mana bonus" type="int">
			Positive &lt;mana bonus&gt; increases the mana points.
			Negative decreases them (decrease can't reduce the total mana
			of the wearer below 1).
		</attribute>
		<attribute arch="food" editor="food bonus" type="int">
			Positive &lt;food bonus&gt; slows down the player's
			digestion, thus he consumes less food. Negative values speed
			it up.

			Note that food is consumed not only for "being alive", but
			also for healing and mana-regeneration.

			&lt;food bonus&gt; only affects the amount of food consumed
			for "being alive". Hence, even with high &lt;food bonus&gt;,
			during a fight a player can run out of food quickly.
		</attribute>
		<attribute arch="make_invisible" editor="make invisible" type="bool">
			When applied the user gets invisible. He can't be seen by
			players or monsters unless they have "see invisible".
		</attribute>
		<attribute arch="see_invisible" editor="see invisible" type="bool">
			When applied the user can see invisible objects.
		</attribute>
		<attribute arch="make_ethereal" editor="make ethereal" type="bool">
			When applied the user gets ethereal. He can still be
			transparently seen. Grants the ability to move through walls
			and doors which have the PASS_THRU flag set (like ghosts and
			other non physical monsters).
		</attribute>
		<attribute arch="xrays" editor="gives xray vision" type="bool">
			X-ray vision allows the player to see through obstacles in a
			two-square-wide radius. This is extremely helpful and
			desirable, so don't give it away for cheap on equipment.
		</attribute>
		<attribute arch="can_see_in_dark" editor="gives infravision" type="bool">
			A player with the ability of
			&lt;infravision (see in darkness)&gt; can see better (but not
			perfectly) in darkness. Living objects will be shown in red.

			For high-level monsters, this flag is a "should-have".
		</attribute>
		<attribute arch="stealth" editor="stealth" type="bool">
			Stealth allows the player to move stealthily, thus reducing
			the visibility range of monsters nearby by twice of their
			noram visibility range.
		</attribute>
		<attribute arch="reflect_spell" editor="give reflect spells" type="bool">
			If a player is wearing any piece of equipment with the
			ability to &lt;reflect spells&gt;, all kinds of spell bullets
			and beams will bounce off him.

			This works only about 90% of all times, to avoid players
			being completely immune to certain types of attacks.

			This is a very powerful ability and it shouldn't be handed
			out cheaply!
		</attribute>
		<attribute arch="reflect_missile" editor="give reflect missiles" type="bool">
			If a player is wearing any piece of equipment with the
			ability to &lt;reflect missiles&gt;, all kinds of projectiles
			(e.g. arrows, bolts, boulders) will bounce off him.

			This works only about 90% of all times, to avoid players
			being completely immune to certain types of attacks.
		</attribute>
		<attribute arch="flying" editor="levitate" type="bool">
			As soon as the player applies a piece of equipment with
			&lt;levitate&gt; set, the player will start to float in the air.
		</attribute>
		<attribute arch="terrain_type" editor="support terrain" type="bitmask_terrain">
			The bearer of this item can move in every terrain that is set
			by &lt;support terrain&gt;. Such abilities like "water
			walking", "fire walking" etc are almost priceless as they
			open access to an entire new plane of the Atrinik world.

			Artifacts with &lt;support terrain&gt; attributes are VERY
			SPECIAL and they must be well-balanced!
		</attribute>
		<attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
			Click on the &lt;attuned paths&gt; button to select
			spellpaths. The player will get attuned to the specified
			spellpaths while wearing this item.
		</attribute>
		<attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
			Click on the &lt;repelled paths&gt; button to select
			spellpaths. The player will get attuned to the specified
			spellpaths while wearing this item.
		</attribute>
		<attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
			Click on the &lt;denied paths&gt; button to select
			spellpaths. The specified spellpaths will be denied to the
			player while wearing this item.
		</attribute>
	</section>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text describes the weapons's "story". Every decent artifact
		weapon should have such a description.
	</attribute>
</type>

<type number="102" name="Random Drop Container" inv="83,120" map="no">
	<ignore>
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Random drop container are used from spawn points. Put in the
		inventory of spawn monsters (the "copy" inside the spawn point)
		there will be a random check against this object. This check will
		be from 0-x. If the check is higher the the value of "drop
		chance" of this object, the items INSIDE this object (set in the
		map editor) are given the monster. This is checked every time a
		monster is spawned.
		<br><br>
		Different monsters inside a spawn point can hold different and
		more than one random drop container. Only stacking of random drop
		containers is not allowed.
	]]>
	</description>
	<attribute arch="container" editor="drop chance" type="int">
		Set to a range from 0 to x. 0 means dropped always. 999999 means
		a chance from 1/999999 to drop.
	</attribute>
</type>

<type number="109" name="Wand &amp; Staff">
	<ignore>
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Wands contain a certain spell. The player can apply (ready) and
		fire the wand. After a defined number of casts, the wand is "used
		up". It is possible to recharge a wand with scrolls of charging,
		but usually that isn't worth the cost.
	]]>
	</description>
	<attribute arch="sp" editor="spell" type="nz_spell">
		The &lt;spell&gt; specifies the contained spell.
	</attribute>
	<attribute arch="level" editor="casting level" type="int">
		The &lt;casting level&gt; of the wand determines it's power.
	</attribute>
	<attribute arch="food" editor="number of charges" type="int">
		The wand can be used &lt;number of charges&gt; times before it is
		used up. It can be recharged with scrolls of charging.
	</attribute>
	<attribute arch="last_grace" editor="use speed" type="int">
		When fired/used, this value in ticks defines how long it needs
		before the player can fire it again. The value is in ticks.
		8 ticks are a second.
	</attribute>
	<attribute arch="startequip" editor="god-given item" type="bool">
		A god-given item vanishes as soon as the player drops it to the
		ground.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
		This text may contain a description of the wand.
	</attribute>
</type>

<type number="118" name="Event Object" allows_all_inv="yes" map="no">
	<ignore>
		<attribute arch="sub_type" />
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		The event object can hold script or other events triggered in the
		game. The event object is inserted in the target object and when
		an action or situation matches the event object settings, the
		event is triggered.
	]]>
	</description>
	<attribute arch="sub_type" editor="event ID" type="list_event">
		Set the event where this event object should trigger.
	</attribute>
	<attribute arch="name" editor="plugin" type="string">
		Name of the plugin which should be triggered by this event object.
	</attribute>
	<attribute arch="race" editor="script" type="script_file">
		Name of the script of data file we want submit to the plugin when
		the event is triggered.
	</attribute>
	<attribute arch="slaying" editor="option" type="string">
		This string is given the event as option string.
	</attribute>
	<attribute arch="lifesave" editor="players only" type="bool">
		If set, this event will only be activated by players.
	</attribute>
	<attribute arch="path_attuned" editor="AI events" type="bitmask_event_ai">
		A combination of AI events this object wants to receive.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="config" type="text">
		Allows you to pass multi-line options to the event.
	</attribute>
</type>

<type number="127" name="Map Event Object" inv="">
	<ignore>
		<attribute arch="sub_type" />
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Map event objects can hold scripts or other events triggered when
		a certain action is performed map-wide, for example, player enters
		the map, the map resets, player leaves the map, etc.
	]]>
	</description>
	<attribute arch="sub_type" editor="event ID" type="list_map_event">
		Set the map event where this map event object should trigger.
	</attribute>
	<attribute arch="name" editor="plugin" type="string">
		Name of the plugin which should be triggered by this map event object.
	</attribute>
	<attribute arch="race" editor="script" type="script_file">
		Name of the script of data file we want submit to the plugin when
		the map event is triggered.
	</attribute>
	<attribute arch="slaying" editor="option" type="string">
		This string is given the map event as option string.
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="config" type="text">
		Allows you to pass multi-line options to the event.
	</attribute>
</type>

<type number="119" name="Waypoint Object" inv="80,83" map="no">
	<ignore>
		<attribute arch="ac" />
		<attribute arch="sub_type" />
		<attribute arch="damned" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		The waypoint object can hold a position that a monster is to
		reach.

		Mobs will only use waypoints if their attack_movement attribute
		is between 176 and 191.

		When the mob reaches the destination, it will either continue to
		the next waypoint, or stop. Waypoints can be used to set up
		patrol routes or make more dynamic script behaviours.

		When a waypoint is reached, a TRIGGER event will be executed.
	]]>
	</description>
	<attribute arch="title" editor="next waypoint" type="string">
		Name of the next waypoint to go to when this is reached. Use this
		to chain together several waypoints.
	</attribute>
	<attribute arch="slaying" editor="destination map" type="map_path">
		Path to destination map. Leave blank to use current map.

		You can enter an absolute path, beginning with '/' (for example
		"/tutorial"). It can also be a relative path, not beginning with
		'/' (on the map "/shattered_islands/world_0303" for example I
		could use the relative path "0304"). Use relative paths whenever
		possible! Note that upper/lower case must always be set
		correctly. However, please use lower case only.
	</attribute>
	<attribute arch="hp" editor="destination X" type="int">
		The destinations define the (x, y)-coordinates where the mob
		should go.
	</attribute>
	<attribute arch="sp" editor="destination Y" type="int">
		The destinations define the (x, y)-coordinates where the mob
		should go.
	</attribute>
	<attribute arch="wc" editor="pause" type="int">
		Amount of time the mob should wait at this waypoint before
		proceeding to the next.
	</attribute>
	<attribute arch="maxsp" editor="trigger distance" type="int">
		How far away from the exact position will the waypoint be
		considered to be reached.

		Set to 0 to require the mob to be standing on top of the
		specified destination.
	</attribute>
	<attribute arch="cursed" editor="active" type="bool">
		The active waypoint is the one the mob is currently using. A mob
		should not have more than one active waypoint.
	</attribute>
</type>

<type number="120" name="Quest Container" inv="80,83,102,120,122" map="no">
	<ignore>
		<attribute arch="ac" />
		<attribute arch="sub_type" />
		<attribute arch="damned" />
		<attribute arch="name" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Quest containers are containers to be inserted to monsters and can be used in
		different ways depending on type of the quest.

		<h2>One drop quest</h2>
		One drop quest is a quest which doesn't have a quest giver, but is only located
		inside a monster. This is used to create quest items that will only drop once for
		each player, like King Rhun's Cloak. Item to be dropped for the player is inserted
		inside the quest container. If the item has "one_drop 1" set, the player will never
		be able to find the item again a second time. This means it should be set for special
		drops like Rhun's Cloak, but not for keys.

		<h2>Kill quest</h2>
		This kind of quest requires the player to kill X monsters before the quest is
		completed. Nothing is inserted inside the quest container.

		<h2>Kill item quest</h2>
		This is similar to a one drop quest, but the quest has a quest giver, which requires
		the player to find the item that is being looked for. Typically, a monster will drop
		the object to be found. The object that is being looked for is inserted inside the
		quest container.
	]]>
	</description>
	<use>
	<![CDATA[
		A useful trick with quest containers is that you can put the containers into the
		inventory of a random creator. Since random creators are parsed when the monster
		spawns and not when the inventory drops, this is useful to create a quest where
		the player needs to kill 5 ghosts, but the ghosts have only 50% chance to get
		counted to the killed total, with the help of random creators. Another example
		is a quest where an item is being looked for that drops from a specific monster
		(or a bunch of monsters) but using random creators it has only 10% chance of
		being dropped.
	]]>
	</use>
	<attribute arch="name" editor="quest UID" type="string">
		Unique identifier for this quest.
	</attribute>
    <attribute arch="race" editor="quest name" type="string">
        Name of this quest. Only use for item drop quests.
    </attribute>
	<attribute arch="sub_type" editor="type of quest" type="list_quest_type">
		Type of this quest.
	</attribute>
</type>

<type number="126" name="Beacon">
	<ignore>
		<attribute arch="ac" />
		<attribute arch="sub_type" />
		<attribute arch="damned" />
		<attribute arch="name" />
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Beacons are objects which can be located by scripts using their
		ID, wherever in the game they might be. This behavior is useful,
		for example, for gates and switches on different maps, as
		connections normally work only on a single map (you can't open a
		gate that is on map2 with lever that is on map1, for example).
		<br><br>
		With beacons, however, you can. Make a lever that triggers a
		script on use, with the script looking for a specific beacon ID
		in the game (if you know the map path the beacon is on you should
		use ReadyMap() first to ensure the beacon's map is loaded in
		memory). The beacon would be inside an invisible lever on the map
		with the gate you want to trigger sharing the same connection
		values, and the script would just then trigger the invisible
		lever using something like:
		<br><br>
		me.Apply(beacon.environment, APPLY_TOGGLE)
	]]>
	</description>
	<attribute arch="name" editor="beacon ID" type="string">
		ID of the beacon. This should be unique string and no other
		beacon should have the same ID.
	</attribute>
</type>

<type number="155" name="Client Map Info" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Client map info objects contain information about the map for
		region map images generated for the client. They may contain
		labels, tooltips, etc to display on the region map.
	]]>
	</description>
	<attribute arch="name" editor="ID" type="string">
		Each label/tooltip/etc name must be unique and cannot contain spaces.
	</attribute>
	<attribute arch="sub_type" editor="type" type="list_client_map">
		Type of the info. Labels are drawn onto the map image and all client
		markup is allowed. Tooltips get shown when the mouse is moved over the
		map area the tooltip spans, and also can have client markup.
	</attribute>
	<attribute arch="stand_still" editor="automatic tooltip" type="bool">
		Automatically detects the width/height for this tooltip from 2 nearby
		info objects with the same unique names.
	</attribute>
	<attribute arch="path_attuned" editor="width" type="int">
		Number of tiles east of the info object that the object spans.
	</attribute>
	<attribute arch="path_repelled" editor="height" type="int">
		Number of tiles south of the info object that the object spans.
	</attribute>
	<attribute arch="item_level" editor="tooltip tiles" type="int">
		Number of tiles around the info object (including the info object's
		tile) that are within the tooltip's area.
	</attribute>
	<attribute arch="last_heal" editor="label X" type="int">
		Adjusts the label's tile X position.
	</attribute>
	<attribute arch="last_sp" editor="label Y" type="int">
		Adjusts the label's tile Y position.
	</attribute>
	<attribute arch="cursed" editor="hidden" type="bool">
		The tooltip/label is initially hidden but can be shown by per-player
		server command.
	</attribute>
	<attribute arch="item_skill" editor="outline size" type="int">
		If not 0, will draw an outline around the tooltip's edges with the
		specified border size.
	</attribute>
	<attribute arch="slaying" editor="outline color" type="string">
		Color of the outline in HTML notation (default is red, or #ff0000).
	</attribute>
	<attribute arch_begin="msg" arch_end="endmsg" editor="text" type="text">
		Label name or the tooltip's contents. Client markup is allowed.
	</attribute>
</type>

<type number="152" name="Map Info" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Map information objects can be used to "span" a specified area with
		a bunch of settings -- for example, change map name or music. It works
		similarly to client map information objects.
	]]>
	</description>
    <attribute arch="name" editor="ID" type="string">
        Used to link map info objects together (in the case of buildings, for
        example).
    </attribute>
	<attribute arch="hp" editor="width" type="int">
		Number of tiles east of the info object that the object spans.
	</attribute>
	<attribute arch="sp" editor="height" type="int">
		Number of tiles south of the info object that the object spans.
	</attribute>
	<attribute arch="race" editor="map name" type="string">
		Override map name.
	</attribute>
	<attribute arch="slaying" editor="map music" type="string">
		Override map music -- same format as in map properties. Use 'no_music'
		to disable any map properties music.
	</attribute>
	<attribute arch="title" editor="map weather" type="string">
		Override map weather -- same format as in map properties. 'none' may
		be used to disable any map properties weather.
	</attribute>
	<attribute arch="item_power" editor="darkness" type="int">
		Override darkness -- the default is -1, which means no override will happen.
		Use -2 to enable outdoor darkness.
	</attribute>
    <attribute arch="cursed" editor="building" type="bool">
        The map info defines a building's coordinates.
    </attribute>
    <attribute arch="is_magical" editor="balcony" type="bool">
        Defines a balcony.
    </attribute>
    <attribute arch="damned" editor="overlook" type="bool">
        Defines an overlook.
    </attribute>
	<attribute arch="stand_still" editor="no harmful spells" type="bool">
		Disables harmful spells. If the map already has harmful spells disabled,
		this setting will enable harmful spells on the area the info object spans.
	</attribute>
	<attribute arch="no_magic" editor="no magic" type="bool">
		Disables magic.
	</attribute>
	<attribute arch="no_pvp" editor="no PvP" type="bool">
		Disables PvP.
	</attribute>
</type>

<type number="61" name="Ambient Sound Effect" inv="">
	<ignore>
		<ignore_list name="non_pickable" />
		<ignore_list name="default_setting" />
	</ignore>
	<description>
	<![CDATA[
		Ambient sound effect will keep playing its sound effect infinitely
		for all players in range.

		This is useful for effects such as waterfall, dripping water as a
		quest hint, etc.
	]]>
	</description>
    <attribute arch="match" editor="match expression" type="string">
        Expression that must match in order for the sound to be heard, eg:

        hour &lt; 7 &amp;&amp; hour &gt; 20
    </attribute>
	<attribute arch="race" editor="sound effect" type="string">
		Sound effect filename to play.
	</attribute>
	<attribute arch="item_condition" editor="volume" type="int">
		Volume at which to play the sound effect. This will be adjusted
		based on the client's volume setting, and how far away the player
		is from this object.
	</attribute>
	<attribute arch="item_level" editor="max range" type="int" min="1" max="8">
		The maximum range at which the sound effect may be heard.
	</attribute>
	<attribute arch="xrays" editor="heard through obstacles" type="bool">
		If set, the sound effect will be heard through sight-blocking
		obstacles, so long as it's in range.
	</attribute>
</type>

</types>
